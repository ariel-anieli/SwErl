{"interfaceLanguages":{"swift":[{"children":[{"title":"Getting Started","type":"groupMarker"},{"path":"\/documentation\/swerl\/gettingstarted","title":"GettingStarted","type":"article"},{"title":"Processes","type":"groupMarker"},{"path":"\/documentation\/swerl\/spawnsysf(_:queuetouse:name:initialstate:function:)","title":"func spawnsysf(RegistrationType, queueToUse: DispatchQueue, name: String?, initialState: SwErlState, function: (Pid, SwErlMessage, SwErlState) -> (SwErlResponse, SwErlState)) throws -> Pid","type":"func"},{"title":"GenServer - Generic Servers","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swerl\/genserver\/call(_:_:)-4y3a5","title":"static func call(Pid, Any) throws -> SwErlResponse","type":"method"},{"path":"\/documentation\/swerl\/genserver\/call(_:_:)-6s0vp","title":"static func call(String, Any) throws -> SwErlResponse","type":"method"},{"path":"\/documentation\/swerl\/genserver\/cast(_:_:)-5fhzx","title":"static func cast(Pid, Any) throws","type":"method"},{"path":"\/documentation\/swerl\/genserver\/cast(_:_:)-7um5e","title":"static func cast(String, Any) throws","type":"method"},{"path":"\/documentation\/swerl\/genserver\/notify(_:_:)-504ya","title":"static func notify(Pid, SwErlMessage)","type":"method"},{"path":"\/documentation\/swerl\/genserver\/notify(_:_:)-56slb","title":"static func notify(String, SwErlMessage)","type":"method"},{"path":"\/documentation\/swerl\/genserver\/startlink(queueendpoint:_:_:)","title":"static func startLink<T>(queueEndpoint: DispatchQueue, T.Type, Any?) throws -> Pid","type":"method"},{"path":"\/documentation\/swerl\/genserver\/startlink(queueendpoint:_:_:_:)","title":"static func startLink<T>(queueEndpoint: DispatchQueue, String, T.Type, Any?) throws -> String","type":"method"},{"path":"\/documentation\/swerl\/genserver\/unlink(_:_:)-8ly0n","title":"static func unlink(String, String) -> SwErlResponse","type":"method"},{"path":"\/documentation\/swerl\/genserver\/unlink(_:_:)-9tury","title":"static func unlink(Pid, String) -> SwErlResponse","type":"method"}],"path":"\/documentation\/swerl\/genserver","title":"GenServer","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swerl\/genserverbehavior\/handlecall(request:data:)","title":"static func handleCall(request: Any, data: Any) -> (Any, Any)","type":"method"},{"path":"\/documentation\/swerl\/genserverbehavior\/handlecast(request:data:)","title":"static func handleCast(request: Any, data: Any?) -> Any?","type":"method"},{"path":"\/documentation\/swerl\/genserverbehavior\/initializedata(_:)","title":"static func initializeData(Any?) -> Any?","type":"method"},{"path":"\/documentation\/swerl\/genserverbehavior\/terminatecleanup(reason:data:)","title":"static func terminateCleanup(reason: String, data: Any?)","type":"method"}],"path":"\/documentation\/swerl\/genserverbehavior","title":"GenServerBehavior","type":"protocol"},{"title":"GenStateM - Generic State Machines","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swerl\/genstatem\/call(pid:message:)","title":"static func call(PID: Pid, message: SwErlMessage) -> SwErlResponse","type":"method"},{"path":"\/documentation\/swerl\/genstatem\/call(name:message:)","title":"static func call(name: String, message: SwErlMessage) -> SwErlResponse","type":"method"},{"path":"\/documentation\/swerl\/genstatem\/cast(pid:message:)","title":"static func cast(PID: Pid, message: SwErlMessage)","type":"method"},{"path":"\/documentation\/swerl\/genstatem\/cast(name:message:)","title":"static func cast(name: String, message: SwErlMessage)","type":"method"},{"path":"\/documentation\/swerl\/genstatem\/notify(pid:message:)","title":"static func notify(PID: Pid, message: SwErlMessage)","type":"method"},{"path":"\/documentation\/swerl\/genstatem\/notify(name:message:)","title":"static func notify(name: String, message: SwErlMessage)","type":"method"},{"path":"\/documentation\/swerl\/genstatem\/startlink(queuetouse:name:statem:initialdata:)","title":"static func startLink<T>(queueToUse: DispatchQueue, name: String, statem: T.Type, initialData: Any) throws -> Pid","type":"method"},{"path":"\/documentation\/swerl\/genstatem\/startlinkglobally(queuetouse:name:statem:initialdata:)","title":"static func startLinkGlobally<T>(queueToUse: DispatchQueue, name: String, statem: T.Type, initialData: Any) throws -> Pid","type":"method"},{"path":"\/documentation\/swerl\/genstatem\/unlink(name:message:)","title":"static func unlink(name: String, message: SwErlMessage) -> SwErlResponse","type":"method"}],"path":"\/documentation\/swerl\/genstatem","title":"GenStateM","type":"enum"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swerl\/genstatembehavior\/handlecall(message:current_state:)","title":"static func handleCall(message: SwErlMessage, current_state: SwErlState) -> (SwErlResponse, SwErlState)","type":"method"},{"path":"\/documentation\/swerl\/genstatembehavior\/handlecast(message:current_state:)","title":"static func handleCast(message: SwErlMessage, current_state: SwErlState) -> SwErlState","type":"method"},{"path":"\/documentation\/swerl\/genstatembehavior\/initialize(initialdata:)","title":"static func initialize(initialData: Any) -> SwErlState","type":"method"},{"path":"\/documentation\/swerl\/genstatembehavior\/notify(message:state:)","title":"static func notify(message: SwErlMessage, state: SwErlState)","type":"method"},{"path":"\/documentation\/swerl\/genstatembehavior\/unlinked(message:current_state:)","title":"static func unlinked(message: SwErlMessage, current_state: SwErlState)","type":"method"}],"path":"\/documentation\/swerl\/genstatembehavior","title":"GenStatemBehavior","type":"protocol"},{"title":"GenEvent - Generic Events","type":"groupMarker"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swerl\/eventmanager\/link(queuetouse:name:intialhandlers:)","title":"static func link(queueToUse: DispatchQueue, name: String, intialHandlers: [SwErlStatelessHandler]) throws -> Pid","type":"method"},{"path":"\/documentation\/swerl\/eventmanager\/notify(pid:message:)","title":"static func notify(PID: Pid, message: SwErlMessage)","type":"method"},{"path":"\/documentation\/swerl\/eventmanager\/notify(name:message:)","title":"static func notify(name: String, message: SwErlMessage)","type":"method"},{"path":"\/documentation\/swerl\/eventmanager\/unlink(name:)","title":"static func unlink(name: String)","type":"method"}],"path":"\/documentation\/swerl\/eventmanager","title":"EventManager","type":"enum"},{"title":"Contribute to SwErl","type":"groupMarker"},{"path":"\/documentation\/swerl\/contribute","title":"Contribute","type":"article"},{"title":"Protocols","type":"groupMarker"},{"path":"\/documentation\/swerl\/otpactor_behavior","title":"OTPActor_behavior","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swerl\/pid\/!(_:_:)","title":"static func ! (Pid, SwErlMessage) -> SwErlResponse","type":"op"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swerl\/pid\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swerl\/pid\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swerl\/pid","title":"Pid","type":"struct"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlatom\/!(_:_:)","title":"static func ! (SwErlAtom, Any) -> SwErlResponse","type":"op"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlatom\/string","title":"var string: String?","type":"property"},{"path":"\/documentation\/swerl\/swerlatom\/utf8","title":"var utf8: Data?","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlatom\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swerl\/swerlatom\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swerl\/swerlatom","title":"SwErlAtom","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlnewerref\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swerl\/swerlnewerref\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swerl\/swerlnewerref","title":"SwErlNewerRef","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlprocess\/init(queuetouse:registrationid:otp_wrappers:)","title":"init(queueToUse: DispatchQueue, registrationID: Pid, OTP_Wrappers: (SwErlClosure, SwErlClosure, SwErlClosure, SwErlClosure))","type":"init"},{"path":"\/documentation\/swerl\/swerlprocess\/init(queuetouse:registrationid:eventhandlers:)","title":"init(queueToUse: DispatchQueue, registrationID: Pid, eventHandlers: [SwErlStatelessHandler])","type":"init"},{"path":"\/documentation\/swerl\/swerlprocess\/init(queuetouse:registrationid:functionality:)-2ug3g","title":"init(queueToUse: DispatchQueue, registrationID: Pid, functionality: (Pid, SwErlState, SwErlMessage) -> SwErlState)","type":"init"},{"path":"\/documentation\/swerl\/swerlprocess\/init(queuetouse:registrationid:functionality:)-58x7o","title":"init(queueToUse: DispatchQueue, registrationID: Pid, functionality: (Pid, SwErlMessage) -> Void) throws","type":"init"},{"path":"\/documentation\/swerl\/swerlprocess\/init(queuetouse:registrationid:functionality:)-6gi8u","title":"init(queueToUse: DispatchQueue, registrationID: Pid, functionality: (Pid, SwErlState, SwErlMessage) -> (SwErlResponse, SwErlState))","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlprocess\/genstatemprocesswrappers","title":"var GenStatemProcessWrappers: (SwErlClosure, SwErlClosure, SwErlClosure, SwErlClosure)?","type":"property"},{"path":"\/documentation\/swerl\/swerlprocess\/asyncstatefullambda","title":"var asyncStatefulLambda: ((Pid, SwErlState, SwErlMessage) -> SwErlState)?","type":"property"},{"path":"\/documentation\/swerl\/swerlprocess\/eventhandlers","title":"var eventHandlers: [SwErlStatelessHandler]?","type":"property"},{"path":"\/documentation\/swerl\/swerlprocess\/queue","title":"var queue: DispatchQueue","type":"property"},{"path":"\/documentation\/swerl\/swerlprocess\/registeredpid","title":"let registeredPid: Pid","type":"property"},{"path":"\/documentation\/swerl\/swerlprocess\/statelesslambda","title":"var statelessLambda: ((Pid, SwErlMessage) -> Void)?","type":"property"},{"path":"\/documentation\/swerl\/swerlprocess\/syncstatefullambda","title":"var syncStatefulLambda: ((Pid, SwErlState, SwErlMessage) -> (SwErlResponse, SwErlState))?","type":"property"}],"path":"\/documentation\/swerl\/swerlprocess","title":"SwErlProcess","type":"struct"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlref\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swerl\/swerlref\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swerl\/swerlref","title":"SwErlRef","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/swerl\/buildsafe(dictionary:named:)","title":"func buildSafe<K, V>(dictionary: [K : V], named: String) throws","type":"func"},{"path":"\/documentation\/swerl\/spawnglobally(queuetouse:name:function:)","title":"func spawnGlobally(queueToUse: DispatchQueue, name: String, function: (Pid, SwErlMessage) -> Void) throws -> Pid","type":"func"},{"path":"\/documentation\/swerl\/spawnglobally(queuetouse:name:initialstate:function:)","title":"func spawnGlobally(queueToUse: DispatchQueue, name: String, initialState: SwErlState, function: (Pid, SwErlState, SwErlMessage) -> (SwErlResponse, SwErlState)) throws -> Pid","type":"func"},{"path":"\/documentation\/swerl\/spawnasysf(queuetouse:name:initialstate:function:)","title":"func spawnasysf(queueToUse: DispatchQueue, name: String?, initialState: SwErlState, function: (Pid, SwErlState, SwErlMessage) -> SwErlState) throws -> Pid","type":"func"},{"path":"\/documentation\/swerl\/spawnasysl(_:queuetouse:name:function:)","title":"func spawnasysl(RegistrationType, queueToUse: DispatchQueue, name: String?, function: (Pid, SwErlMessage) -> Void) throws -> Pid","type":"func"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlclosure","title":"SwErlClosure","type":"typealias"},{"path":"\/documentation\/swerl\/swerlmessage","title":"SwErlMessage","type":"typealias"},{"path":"\/documentation\/swerl\/swerlresponse","title":"SwErlResponse","type":"typealias"},{"path":"\/documentation\/swerl\/swerlstate","title":"SwErlState","type":"typealias"},{"path":"\/documentation\/swerl\/swerlstatelesshandler","title":"SwErlStatelessHandler","type":"typealias"},{"path":"\/documentation\/swerl\/swerlvalue","title":"SwErlValue","type":"typealias"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swerl\/registrationtype\/global","title":"case global","type":"case"},{"path":"\/documentation\/swerl\/registrationtype\/local","title":"case local","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swerl\/registrationtype\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swerl\/registrationtype\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swerl\/registrationtype","title":"RegistrationType","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swerl\/safedictcommand\/add","title":"case add","type":"case"},{"path":"\/documentation\/swerl\/safedictcommand\/get","title":"case get","type":"case"},{"path":"\/documentation\/swerl\/safedictcommand\/getkeys","title":"case getKeys","type":"case"},{"path":"\/documentation\/swerl\/safedictcommand\/getraw","title":"case getRaw","type":"case"},{"path":"\/documentation\/swerl\/safedictcommand\/getvalues","title":"case getValues","type":"case"},{"path":"\/documentation\/swerl\/safedictcommand\/remove","title":"case remove","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swerl\/safedictcommand\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swerl\/safedictcommand\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swerl\/safedictcommand","title":"SafeDictCommand","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlerror\/alreadystarted","title":"case alreadyStarted","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/badatom","title":"case badAtom","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/invalidcommand","title":"case invalidCommand","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/invalidexternaltype","title":"case invalidExternalType","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/invalidmessage","title":"case invalidMessage","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/invalidport","title":"case invalidPort","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/invalidstate","title":"case invalidState","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/invalidvalue","title":"case invalidValue","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/ipnotfound","title":"case ipNotFound","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/missingclosure","title":"case missingClosure","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/notgenserver_behavior","title":"case notGenServer_behavior","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/notregisteredbyname","title":"case notRegisteredByName","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/notregisteredbypid","title":"case notRegisteredByPid","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/notstatem_behavior","title":"case notStatem_behavior","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/processalreadylinked","title":"case processAlreadyLinked","type":"case"},{"path":"\/documentation\/swerl\/swerlerror\/statem_behaviorwithoutstate","title":"case statem_behaviorWithoutState","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlerror\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swerl\/swerlerror\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlerror\/localizeddescription","title":"var localizedDescription: String","type":"property"}],"path":"\/documentation\/swerl\/swerlerror\/error-implementations","title":"Error Implementations","type":"symbol"}],"path":"\/documentation\/swerl\/swerlerror","title":"SwErlError","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlpassed\/fail","title":"case fail","type":"case"},{"path":"\/documentation\/swerl\/swerlpassed\/ok","title":"case ok","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swerl\/swerlpassed\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swerl\/swerlpassed\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swerl\/swerlpassed","title":"SwErlPassed","type":"enum"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swerl\/swift\/string\/!(_:_:)","title":"static func ! (String, Any) -> SwErlResponse","type":"op"}],"path":"\/documentation\/swerl\/swift\/string","title":"String","type":"extension"}],"path":"\/documentation\/swerl\/swift","title":"Swift","type":"extension"}],"path":"\/documentation\/swerl","title":"SwErl","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}