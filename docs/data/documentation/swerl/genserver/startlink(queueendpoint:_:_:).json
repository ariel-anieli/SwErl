{"kind":"symbol","sections":[],"abstract":[{"text":"Initializes and registers a ","type":"text"},{"type":"codeVoice","code":"GenServerBehavior"},{"text":" instance without a specific name, later identifiable only by its PID.","type":"text"}],"metadata":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"startLink","kind":"identifier"},{"text":"<","kind":"text"},{"text":"T","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"queueEndpoint","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"T","kind":"typeIdentifier"},{"text":".Type, ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Pid","preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier"}],"externalID":"s:5SwErl9GenServerO9startLink13queueEndpoint__AA3PidV8Dispatch0J5QueueC_xmypSgtKAA0cD8BehaviorRzlFZ","role":"symbol","title":"startLink(queueEndpoint:_:_:)","roleHeading":"Type Method","modules":[{"name":"SwErl"}],"symbolKind":"method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startLink"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"queueEndpoint"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8Dispatch0A5QueueC","kind":"typeIdentifier","text":"DispatchQueue"},{"kind":"text","text":" = DispatchQueue.global(), "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"type"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"_"},{"kind":"text","text":" "},{"kind":"internalParam","text":"initialState"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Pid","preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior","preciseIdentifier":"s:5SwErl17GenServerBehaviorP","kind":"typeIdentifier","text":"GenServerBehavior"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"parameters","parameters":[{"name":"queueEndpoint","content":[{"type":"paragraph","inlineContent":[{"text":"The dispatch queue for the ","type":"text"},{"code":"DispatchQueue","type":"codeVoice"},{"text":" that ","type":"text"},{"code":"GenServer","type":"codeVoice"},{"text":" will process messages on.","type":"text"}]}]},{"name":"name","content":[{"inlineContent":[{"type":"text","text":"A string identifier for the "},{"code":"GenServerBehavior","type":"codeVoice"},{"type":"text","text":" instance."}],"type":"paragraph"}]},{"name":"type","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"GenServerBehavior","type":"codeVoice"},{"type":"text","text":" conforming type of which to create an instance."}]}]},{"name":"initialState","content":[{"inlineContent":[{"text":"Initial data provided to the ","type":"text"},{"type":"codeVoice","code":"GenServerBehavior"},{"text":"â€™s ","type":"text"},{"type":"codeVoice","code":".initializeData"},{"text":" function.","type":"text"}],"type":"paragraph"}]}]},{"content":[{"level":2,"anchor":"return-value","text":"Return Value","type":"heading"},{"type":"paragraph","inlineContent":[{"text":"The PID of the newly created ","type":"text"},{"code":"GenServer","type":"codeVoice"},{"text":" upon success, or a ","type":"text"},{"code":"SwErlError","type":"codeVoice"},{"text":" on failure.","type":"text"}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwErl\/documentation\/SwErl\/GenServer\/startLink(queueEndpoint:_:_:)"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swerl\/genserver\/startlink(queueendpoint:_:_:)"]}],"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl","doc:\/\/SwErl\/documentation\/SwErl\/GenServer"]]},"references":{"doc://SwErl/documentation/SwErl":{"type":"topic","abstract":[{"type":"text","text":"Concurrency - Erlang style"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl","url":"\/documentation\/swerl","title":"SwErl","role":"collection","kind":"symbol"},"doc://SwErl/documentation/SwErl/GenServerBehavior":{"abstract":[{"text":"Defines the behavior for a generic server (","type":"text"},{"type":"codeVoice","code":"GenServer"},{"text":") in the SwErl framework.","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"GenServerBehavior"},{"text":" protocol allows for the creation of stateful SwErl processes that support synchronous calls and replies through a separate API.","type":"text"},{"text":" ","type":"text"},{"text":"This protocol is designed for user-defined processes, enabling the encapsulation of process state within the registry.","type":"text"},{"text":" ","type":"text"},{"text":"Types conforming to this protocol are utilized to define the functionality of user-created ","type":"text"},{"type":"codeVoice","code":"GenServer"},{"text":" instances.","type":"text"},{"text":" ","type":"text"},{"text":"Multiple, separate ","type":"text"},{"type":"codeVoice","code":"GenServer"},{"text":" instances can be initiated from a single conforming type. Each instance operates within its own execution context as a separate process.","type":"text"},{"text":" ","type":"text"},{"text":"Conforming types are recommended to be static, leveraging SwErl infrastructure for state management.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior","title":"GenServerBehavior","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/genserverbehavior","navigatorTitle":[{"text":"GenServerBehavior","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenServerBehavior","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/GenServer":{"kind":"symbol","type":"topic","url":"\/documentation\/swerl\/genserver","title":"GenServer","role":"symbol","abstract":[{"type":"text","text":"Provides the API for creating, messaging, and managing "},{"code":"GenServer","type":"codeVoice"},{"text":" instances within the SwErl framework.","type":"text"},{"text":" ","type":"text"},{"text":"This static type facilitates the creation and interaction with ","type":"text"},{"code":"GenServer","type":"codeVoice"},{"text":" instances, encapsulating the functionality","type":"text"},{"text":" ","type":"text"},{"text":"for synchronous and asynchronous communication, process lifecycle management, and state handling.","type":"text"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServer","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenServer"}],"navigatorTitle":[{"kind":"identifier","text":"GenServer"}]},"doc://SwErl/documentation/SwErl/Pid":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Pid","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"Pid","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swerl\/pid","title":"Pid","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pid"}]},"doc://SwErl/documentation/SwErl/GenServer/startLink(queueEndpoint:_:_:)":{"kind":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServer\/startLink(queueEndpoint:_:_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startLink"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"queueEndpoint"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"T"},{"text":".Type, ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Pid","preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier"}],"title":"startLink(queueEndpoint:_:_:)","abstract":[{"type":"text","text":"Initializes and registers a "},{"code":"GenServerBehavior","type":"codeVoice"},{"text":" instance without a specific name, later identifiable only by its PID.","type":"text"}],"role":"symbol","type":"topic","url":"\/documentation\/swerl\/genserver\/startlink(queueendpoint:_:_:)"}}}