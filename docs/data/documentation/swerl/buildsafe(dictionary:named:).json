{"sections":[],"schemaVersion":{"minor":3,"patch":0,"major":0},"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl"]]},"metadata":{"externalID":"s:5SwErl9buildSafe10dictionary5namedySDyxq_G_SStKSHRzr0_lF","title":"buildSafe(dictionary:named:)","fragments":[{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"buildSafe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"K","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dictionary","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"named","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":") ","kind":"text"},{"kind":"keyword","text":"throws"}],"roleHeading":"Function","symbolKind":"func","modules":[{"name":"SwErl"}],"role":"symbol"},"abstract":[{"text":"Constructs a thread-safe dictionary with specified initial state and processing logic.","type":"text"},{"text":" ","type":"text"},{"text":"The ","type":"text"},{"code":"buildSafe","type":"codeVoice"},{"text":" function initializes a safe dictionary by creating a new SwErl process","type":"text"},{"text":" ","type":"text"},{"text":"with specific behaviors for adding, removing, and retrieving values based on commands received.","type":"text"}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swerl\/buildsafe(dictionary:named:)"]}],"kind":"symbol","primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildSafe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"K"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dictionary"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"named"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:SH","text":"Hashable"}]}],"kind":"declarations"},{"parameters":[{"content":[{"type":"paragraph","inlineContent":[{"text":"The initial state of the dictionary of type ","type":"text"},{"type":"codeVoice","code":"[K: V]"},{"text":", where ","type":"text"},{"type":"codeVoice","code":"K"},{"text":" is the key type and ","type":"text"},{"type":"codeVoice","code":"V"},{"text":" is the value type.","type":"text"}]}],"name":"dictionary"},{"content":[{"type":"paragraph","inlineContent":[{"text":"The unique ","type":"text"},{"code":"String","type":"codeVoice"},{"text":" identifier for the process associated with the safe dictionary.","type":"text"}]}],"name":"named"}],"kind":"parameters"},{"content":[{"anchor":"discussion","level":2,"type":"heading","text":"Discussion"},{"inlineContent":[{"type":"text","text":"Example Safe Dictionary Use: “friends” ! (SafeDictCommand.add,“bob”,3)"},{"type":"text","text":" "},{"type":"text","text":"adds the key “bob” and matching value 3 to the ‘friends’ safe dictionary of type [String,Int]."}],"type":"paragraph"},{"name":"Throws","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"An error if the process creation encounters issues."}]}]},{"inlineContent":[{"text":"The safe dictionary supports various SafeDictCommands such as add, remove, get, getKeys, getValues, and getRaw,","type":"text"},{"text":" ","type":"text"},{"text":"allowing for dynamic interaction with the dictionary in a thread-safe manner.","type":"text"}],"type":"paragraph"},{"name":"Complexity","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"O(1)","type":"text"}]}]},{"name":"Author","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"Lee Barney"}],"type":"paragraph"}]},{"name":"Version","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"0.1","type":"text"}]}]}],"kind":"content"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwErl\/documentation\/SwErl\/buildSafe(dictionary:named:)"},"references":{"doc://SwErl/documentation/SwErl/buildSafe(dictionary:named:)":{"url":"\/documentation\/swerl\/buildsafe(dictionary:named:)","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/buildSafe(dictionary:named:)","kind":"symbol","type":"topic","abstract":[{"text":"Constructs a thread-safe dictionary with specified initial state and processing logic.","type":"text"},{"text":" ","type":"text"},{"text":"The ","type":"text"},{"code":"buildSafe","type":"codeVoice"},{"text":" function initializes a safe dictionary by creating a new SwErl process","type":"text"},{"text":" ","type":"text"},{"text":"with specific behaviors for adding, removing, and retrieving values based on commands received.","type":"text"}],"role":"symbol","title":"buildSafe(dictionary:named:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"buildSafe"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"K"},{"kind":"text","text":", "},{"kind":"genericParameter","text":"V"},{"kind":"text","text":">("},{"kind":"externalParam","text":"dictionary"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"K"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"named"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}]},"doc://SwErl/documentation/SwErl":{"url":"\/documentation\/swerl","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Concurrency - Erlang style"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl","title":"SwErl","role":"collection"}}}