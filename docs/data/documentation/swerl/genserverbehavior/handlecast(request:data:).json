{"abstract":[{"text":"Handles asynchronous cast messages, where no reply is expected by the sender.","type":"text"}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleCast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"parameters":[{"name":"request","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The content of the cast message."}]}]},{"name":"data","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"The current server state data."}]}]}],"kind":"parameters"},{"kind":"content","content":[{"anchor":"return-value","text":"Return Value","level":2,"type":"heading"},{"inlineContent":[{"text":"Updated server state data for future messages.","type":"text"}],"type":"paragraph"}]}],"kind":"symbol","variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swerl\/genserverbehavior\/handlecast(request:data:)"]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/handleCast(request:data:)"},"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl","doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior"]]},"sections":[],"metadata":{"modules":[{"name":"SwErl"}],"title":"handleCast(request:data:)","symbolKind":"method","roleHeading":"Type Method","role":"symbol","required":true,"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleCast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"externalID":"s:5SwErl17GenServerBehaviorP10handleCast7request4dataypSgyp_AGtFZ"},"references":{"doc://SwErl/documentation/SwErl":{"url":"\/documentation\/swerl","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Concurrency - Erlang style"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl","title":"SwErl","role":"collection"},"doc://SwErl/documentation/SwErl/GenServerBehavior/handleCast(request:data:)":{"url":"\/documentation\/swerl\/genserverbehavior\/handlecast(request:data:)","role":"symbol","title":"handleCast(request:data:)","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/handleCast(request:data:)","abstract":[{"type":"text","text":"Handles asynchronous cast messages, where no reply is expected by the sender."}],"type":"topic","required":true,"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleCast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://SwErl/documentation/SwErl/GenServerBehavior":{"navigatorTitle":[{"text":"GenServerBehavior","kind":"identifier"}],"url":"\/documentation\/swerl\/genserverbehavior","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Defines the behavior for a generic server ("},{"type":"codeVoice","code":"GenServer"},{"type":"text","text":") in the SwErl framework."},{"type":"text","text":" "},{"type":"codeVoice","code":"GenServerBehavior"},{"type":"text","text":" protocol allows for the creation of stateful SwErl processes that support synchronous calls and replies through a separate API."},{"type":"text","text":" "},{"type":"text","text":"This protocol is designed for user-defined processes, enabling the encapsulation of process state within the registry."},{"type":"text","text":" "},{"type":"text","text":"Types conforming to this protocol are utilized to define the functionality of user-created "},{"type":"codeVoice","code":"GenServer"},{"type":"text","text":" instances."},{"type":"text","text":" "},{"type":"text","text":"Multiple, separate "},{"type":"codeVoice","code":"GenServer"},{"type":"text","text":" instances can be initiated from a single conforming type. Each instance operates within its own execution context as a separate process."},{"type":"text","text":" "},{"type":"text","text":"Conforming types are recommended to be static, leveraging SwErl infrastructure for state management."}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior","title":"GenServerBehavior","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenServerBehavior"}],"role":"symbol"}}}