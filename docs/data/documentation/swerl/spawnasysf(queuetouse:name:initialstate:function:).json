{"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl"]]},"metadata":{"roleHeading":"Function","externalID":"s:5SwErl10spawnasysf10queueToUse4name12initialState8functionAA3PidV8Dispatch0L5QueueC_SSSgypypAH_ypyptYbctKF","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"spawnasysf","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queueToUse","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"initialState","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SwErlState","kind":"typeIdentifier","preciseIdentifier":"s:5SwErl0aB5Statea"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Pid","kind":"typeIdentifier","preciseIdentifier":"s:5SwErl3PidV"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier","text":"SwErlState"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5SwErl0aB7Messagea","kind":"typeIdentifier","text":"SwErlMessage"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier","text":"SwErlState"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"}],"role":"symbol","symbolKind":"func","title":"spawnasysf(queueToUse:name:initialState:function:)","modules":[{"name":"SwErl"}]},"schemaVersion":{"minor":3,"patch":0,"major":0},"sections":[],"primaryContentSections":[{"kind":"declarations","declarations":[{"platforms":["Linux"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"spawnasysf","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queueToUse","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"text":" = DispatchQueue.global(), ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":"? = nil, ","kind":"text"},{"text":"initialState","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5SwErl0aB5Statea","text":"SwErlState","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"preciseIdentifier":"s:5SwErl3PidV","text":"Pid","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Pid","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5SwErl0aB5Statea","text":"SwErlState","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5SwErl0aB7Messagea","text":"SwErlMessage","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlMessage","kind":"typeIdentifier"},{"text":") -> ","kind":"text"},{"preciseIdentifier":"s:5SwErl0aB5Statea","text":"SwErlState","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlState","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:5SwErl3PidV","text":"Pid","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Pid","kind":"typeIdentifier"}],"languages":["swift"]}]},{"kind":"content","content":[{"type":"heading","text":"Discussion","anchor":"discussion","level":2},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"makeAvailable: options:Availability.local or Availability.global. The .global option allows other nodes to execute the function or closure on the node it is spawned inside of."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"queueToUse: any DispatchQueue, custom or built-in. Default is ","type":"text"},{"inlineContent":[{"type":"text","text":"DispatchQueue.global()"}],"type":"emphasis"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"name: a unique string optional used as an identifier. . Default is nil_"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"function: the function or closure to execute using the DispatchQueue","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"Value: a SwErl Pid"}],"type":"paragraph"}]}]}]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swerl\/spawnasysf(queuetouse:name:initialstate:function:)"]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwErl\/documentation\/SwErl\/spawnasysf(queueToUse:name:initialState:function:)"},"abstract":[{"text":"This function is used to link a unique name to a stateful function or closure that is executed asynchronously with no result being sent to the process sending the message. Any DispatchQueue desired for running the function or closure can be passed as the first parameter. The state can be any valid Swift type, a tuple, a list, a dictionary, optional, closure, etc.","type":"text"}],"kind":"symbol","references":{"doc://SwErl/documentation/SwErl/SwErlMessage":{"navigatorTitle":[{"text":"SwErlMessage","kind":"identifier"}],"url":"\/documentation\/swerl\/swerlmessage","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlMessage","title":"SwErlMessage","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"SwErlMessage","kind":"identifier"}],"role":"symbol"},"doc://SwErl/documentation/SwErl/spawnasysf(queueToUse:name:initialState:function:)":{"url":"\/documentation\/swerl\/spawnasysf(queuetouse:name:initialstate:function:)","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/spawnasysf(queueToUse:name:initialState:function:)","kind":"symbol","type":"topic","abstract":[{"text":"This function is used to link a unique name to a stateful function or closure that is executed asynchronously with no result being sent to the process sending the message. Any DispatchQueue desired for running the function or closure can be passed as the first parameter. The state can be any valid Swift type, a tuple, a list, a dictionary, optional, closure, etc.","type":"text"}],"role":"symbol","title":"spawnasysf(queueToUse:name:initialState:function:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spawnasysf"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queueToUse"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8Dispatch0A5QueueC","kind":"typeIdentifier","text":"DispatchQueue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"initialState"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier","text":"SwErlState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier","text":"SwErlState"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5SwErl0aB7Messagea","kind":"typeIdentifier","text":"SwErlMessage"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier","text":"SwErlState"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"}]},"doc://SwErl/documentation/SwErl/SwErlState":{"title":"SwErlState","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"SwErlState","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlState","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swerl\/swerlstate","navigatorTitle":[{"text":"SwErlState","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/Pid":{"navigatorTitle":[{"text":"Pid","kind":"identifier"}],"url":"\/documentation\/swerl\/pid","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Pid","title":"Pid","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pid","kind":"identifier"}],"role":"symbol"},"doc://SwErl/documentation/SwErl":{"url":"\/documentation\/swerl","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Concurrency - Erlang style"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl","title":"SwErl","role":"collection"}}}