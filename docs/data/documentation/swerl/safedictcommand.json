{"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/add","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/get","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getKeys","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getRaw","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getValues","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/remove"],"title":"Enumeration Cases"},{"generated":true,"identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/Equatable-Implementations"],"title":"Default Implementations"}],"abstract":[{"text":"Defines commands for interacting with a thread-safe dictionary.","type":"text"}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swerl\/safedictcommand"]}],"primaryContentSections":[{"declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SafeDictCommand","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}],"kind":"declarations"},{"content":[{"level":2,"type":"heading","text":"Overview","anchor":"overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The "},{"code":"SafeDictCommand","type":"codeVoice"},{"type":"text","text":" enum specifies the set of operations that can be performed on the safe dictionary,"},{"type":"text","text":" "},{"type":"text","text":"allowing for addition, removal, retrieval, and access to keys or values in a thread-safe manner."}]},{"items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Cases:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"add: Adds a new key-value pair to the dictionary. If the key already exists, the value is updated."}]}]},{"content":[{"inlineContent":[{"text":"remove: Removes the key-value pair associated with the specified key from the dictionary.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"get: Retrieves the value associated with the specified key from the dictionary or nil if none is found."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"getKeys: Retrieves all keys from the dictionary.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"getValues: Retrieves all values from the dictionary."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"getRaw: Retrieves an unsafe copy of the raw dictionary object, including all key-value pairs.","type":"text"}]}]}]}]}],"type":"unorderedList"},{"type":"paragraph","inlineContent":[{"text":"This enumeration is utilized within the ","type":"text"},{"code":"buildSafe","type":"codeVoice"},{"text":" function to define the type of operation","type":"text"},{"text":" ","type":"text"},{"text":"to be executed on the safe dictionary in response to messages received by the SwErl process.","type":"text"}]},{"type":"aside","style":"note","name":"Complexity","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"add - O(1), remove - O(1), get - O(1), getKeys - O(k) where "},{"type":"codeVoice","code":"k"},{"type":"text","text":" is the number of keys, getValues - O(v) where "},{"type":"codeVoice","code":"v"},{"type":"text","text":" is the number of values, getRaw - O(1). Swift’s ‘copy-on-write’ behavior allows the return of the raw, underlying dictionary without duplication."}]}]},{"type":"aside","style":"note","name":"Author","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lee Barney"}]}]},{"type":"aside","style":"note","name":"Version","content":[{"inlineContent":[{"type":"text","text":"0.1"}],"type":"paragraph"}]}],"kind":"content"}],"identifier":{"url":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand","interfaceLanguage":"swift"},"metadata":{"symbolKind":"enum","navigatorTitle":[{"text":"SafeDictCommand","kind":"identifier"}],"role":"symbol","modules":[{"name":"SwErl"}],"externalID":"s:5SwErl15SafeDictCommandO","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SafeDictCommand","kind":"identifier"}],"title":"SafeDictCommand","roleHeading":"Enumeration"},"relationshipsSections":[{"identifiers":["doc:\/\/SwErl\/SQ","doc:\/\/SwErl\/SH"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl"]]},"references":{"doc://SwErl/documentation/SwErl/SafeDictCommand/remove":{"kind":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/remove","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"}],"title":"SafeDictCommand.remove","abstract":[],"role":"symbol","type":"topic","url":"\/documentation\/swerl\/safedictcommand\/remove"},"doc://SwErl/documentation/SwErl/SafeDictCommand":{"abstract":[{"text":"Defines commands for interacting with a thread-safe dictionary.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand","title":"SafeDictCommand","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/safedictcommand","navigatorTitle":[{"text":"SafeDictCommand","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SafeDictCommand","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/SafeDictCommand/Equatable-Implementations":{"title":"Equatable Implementations","role":"collectionGroup","type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/Equatable-Implementations","kind":"article","url":"\/documentation\/swerl\/safedictcommand\/equatable-implementations","abstract":[]},"doc://SwErl/documentation/SwErl/SafeDictCommand/get":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"get"}],"title":"SafeDictCommand.get","role":"symbol","type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/get","kind":"symbol","url":"\/documentation\/swerl\/safedictcommand\/get","abstract":[]},"doc://SwErl/documentation/SwErl":{"type":"topic","abstract":[{"type":"text","text":"Concurrency - Erlang style"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl","url":"\/documentation\/swerl","title":"SwErl","role":"collection","kind":"symbol"},"doc://SwErl/SQ":{"identifier":"doc:\/\/SwErl\/SQ","title":"Swift.Equatable","type":"unresolvable"},"doc://SwErl/SH":{"identifier":"doc:\/\/SwErl\/SH","title":"Swift.Hashable","type":"unresolvable"},"doc://SwErl/documentation/SwErl/SafeDictCommand/getRaw":{"url":"\/documentation\/swerl\/safedictcommand\/getraw","title":"SafeDictCommand.getRaw","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRaw"}],"kind":"symbol","role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getRaw","type":"topic","abstract":[]},"doc://SwErl/documentation/SwErl/SafeDictCommand/add":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/add","kind":"symbol","role":"symbol","abstract":[],"url":"\/documentation\/swerl\/safedictcommand\/add","type":"topic","title":"SafeDictCommand.add","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"}]},"doc://SwErl/documentation/SwErl/SafeDictCommand/getValues":{"kind":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getValues","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"getValues"}],"title":"SafeDictCommand.getValues","abstract":[],"role":"symbol","type":"topic","url":"\/documentation\/swerl\/safedictcommand\/getvalues"},"doc://SwErl/documentation/SwErl/SafeDictCommand/getKeys":{"kind":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getKeys","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"getKeys"}],"title":"SafeDictCommand.getKeys","abstract":[],"role":"symbol","type":"topic","url":"\/documentation\/swerl\/safedictcommand\/getkeys"}}}