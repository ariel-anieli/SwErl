{"variants":[{"paths":["\/documentation\/swerl\/safedictcommand"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/add","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/get","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getKeys","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getRaw","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getValues","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/remove"],"title":"Enumeration Cases"},{"generated":true,"identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/Equatable-Implementations"],"title":"Default Implementations"}],"metadata":{"externalID":"s:5SwErl15SafeDictCommandO","navigatorTitle":[{"text":"SafeDictCommand","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SafeDictCommand","kind":"identifier"}],"title":"SafeDictCommand","roleHeading":"Enumeration","role":"symbol","modules":[{"name":"SwErl"}],"symbolKind":"enum"},"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl"]]},"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SafeDictCommand","kind":"identifier"}],"platforms":["Linux"],"languages":["swift"]}]},{"kind":"content","content":[{"level":2,"anchor":"overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"The ","type":"text"},{"type":"codeVoice","code":"SafeDictCommand"},{"text":" enum specifies the set of operations that can be performed on the safe dictionary,","type":"text"},{"text":" ","type":"text"},{"text":"allowing for addition, removal, retrieval, and access to keys or values in a thread-safe manner.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Cases:"}]},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"add: Adds a new key-value pair to the dictionary. If the key already exists, the value is updated."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"remove: Removes the key-value pair associated with the specified key from the dictionary."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"get: Retrieves the value associated with the specified key from the dictionary or nil if none is found.","type":"text"}]}]},{"content":[{"inlineContent":[{"type":"text","text":"getKeys: Retrieves all keys from the dictionary."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"getValues: Retrieves all values from the dictionary.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"getRaw: Retrieves an unsafe copy of the raw dictionary object, including all key-value pairs."}]}]}]}]}]},{"inlineContent":[{"type":"text","text":"This enumeration is utilized within the "},{"type":"codeVoice","code":"buildSafe"},{"type":"text","text":" function to define the type of operation"},{"type":"text","text":" "},{"type":"text","text":"to be executed on the safe dictionary in response to messages received by the SwErl process."}],"type":"paragraph"},{"name":"Complexity","style":"note","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"add - O(1), remove - O(1), get - O(1), getKeys - O(k) where "},{"type":"codeVoice","code":"k"},{"type":"text","text":" is the number of keys, getValues - O(v) where "},{"type":"codeVoice","code":"v"},{"type":"text","text":" is the number of values, getRaw - O(1). Swift’s ‘copy-on-write’ behavior allows the return of the raw, underlying dictionary without duplication."}]}]},{"name":"Author","style":"note","type":"aside","content":[{"inlineContent":[{"type":"text","text":"Lee Barney"}],"type":"paragraph"}]},{"name":"Version","style":"note","type":"aside","content":[{"inlineContent":[{"text":"0.1","type":"text"}],"type":"paragraph"}]}]}],"sections":[],"schemaVersion":{"major":0,"minor":3,"patch":0},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand"},"kind":"symbol","relationshipsSections":[{"identifiers":["doc:\/\/SwErl\/SQ","doc:\/\/SwErl\/SH"],"kind":"relationships","type":"conformsTo","title":"Conforms To"}],"abstract":[{"text":"Defines commands for interacting with a thread-safe dictionary.","type":"text"}],"references":{"doc://SwErl/documentation/SwErl/SafeDictCommand/Equatable-Implementations":{"type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/Equatable-Implementations","kind":"article","title":"Equatable Implementations","role":"collectionGroup","url":"\/documentation\/swerl\/safedictcommand\/equatable-implementations","abstract":[]},"doc://SwErl/documentation/SwErl/SafeDictCommand/getValues":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getValues","role":"symbol","url":"\/documentation\/swerl\/safedictcommand\/getvalues","kind":"symbol","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"getValues"}],"title":"SafeDictCommand.getValues","abstract":[],"type":"topic"},"doc://SwErl/documentation/SwErl/SafeDictCommand/remove":{"type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/remove","kind":"symbol","title":"SafeDictCommand.remove","role":"symbol","url":"\/documentation\/swerl\/safedictcommand\/remove","abstract":[],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"}]},"doc://SwErl/documentation/SwErl/SafeDictCommand":{"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SafeDictCommand"}],"navigatorTitle":[{"kind":"identifier","text":"SafeDictCommand"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand","type":"topic","title":"SafeDictCommand","abstract":[{"text":"Defines commands for interacting with a thread-safe dictionary.","type":"text"}],"kind":"symbol","url":"\/documentation\/swerl\/safedictcommand","role":"symbol"},"doc://SwErl/documentation/SwErl":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl","type":"topic","title":"SwErl","abstract":[{"text":"Concurrency - Erlang style","type":"text"}],"kind":"symbol","url":"\/documentation\/swerl","role":"collection"},"doc://SwErl/documentation/SwErl/SafeDictCommand/getKeys":{"type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getKeys","kind":"symbol","title":"SafeDictCommand.getKeys","role":"symbol","url":"\/documentation\/swerl\/safedictcommand\/getkeys","abstract":[],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"getKeys"}]},"doc://SwErl/documentation/SwErl/SafeDictCommand/getRaw":{"type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getRaw","kind":"symbol","title":"SafeDictCommand.getRaw","role":"symbol","url":"\/documentation\/swerl\/safedictcommand\/getraw","abstract":[],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRaw"}]},"doc://SwErl/documentation/SwErl/SafeDictCommand/add":{"role":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"add","kind":"identifier"}],"kind":"symbol","title":"SafeDictCommand.add","type":"topic","abstract":[],"url":"\/documentation\/swerl\/safedictcommand\/add","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/add"},"doc://SwErl/documentation/SwErl/SafeDictCommand/get":{"title":"SafeDictCommand.get","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"case"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"}],"kind":"symbol","url":"\/documentation\/swerl\/safedictcommand\/get","role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/get"},"doc://SwErl/SH":{"type":"unresolvable","identifier":"doc:\/\/SwErl\/SH","title":"Swift.Hashable"},"doc://SwErl/SQ":{"type":"unresolvable","identifier":"doc:\/\/SwErl\/SQ","title":"Swift.Equatable"}}}