{"metadata":{"modules":[{"name":"SwErl"}],"fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SafeDictCommand"}],"navigatorTitle":[{"kind":"identifier","text":"SafeDictCommand"}],"role":"symbol","title":"SafeDictCommand","symbolKind":"enum","roleHeading":"Enumeration","externalID":"s:5SwErl15SafeDictCommandO"},"schemaVersion":{"minor":3,"major":0,"patch":0},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swerl\/safedictcommand"]}],"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/add","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/get","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getKeys","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getRaw","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getValues","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/remove"]},{"title":"Default Implementations","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/Equatable-Implementations"],"generated":true}],"abstract":[{"type":"text","text":"Defines commands for interacting with a thread-safe dictionary."}],"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SafeDictCommand"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","anchor":"overview","level":2},{"inlineContent":[{"text":"The ","type":"text"},{"code":"SafeDictCommand","type":"codeVoice"},{"text":" enum specifies the set of operations that can be performed on the safe dictionary,","type":"text"},{"text":" ","type":"text"},{"text":"allowing for addition, removal, retrieval, and access to keys or values in a thread-safe manner.","type":"text"}],"type":"paragraph"},{"type":"unorderedList","items":[{"content":[{"inlineContent":[{"type":"text","text":"Cases:"}],"type":"paragraph"},{"items":[{"content":[{"inlineContent":[{"type":"text","text":"add: Adds a new key-value pair to the dictionary. If the key already exists, the value is updated."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"remove: Removes the key-value pair associated with the specified key from the dictionary."}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"type":"text","text":"get: Retrieves the value associated with the specified key from the dictionary or nil if none is found."}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"getKeys: Retrieves all keys from the dictionary.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"getValues: Retrieves all values from the dictionary.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"getRaw: Retrieves an unsafe copy of the raw dictionary object, including all key-value pairs."}]}]}],"type":"unorderedList"}]}]},{"inlineContent":[{"text":"This enumeration is utilized within the ","type":"text"},{"type":"codeVoice","code":"buildSafe"},{"text":" function to define the type of operation","type":"text"},{"text":" ","type":"text"},{"text":"to be executed on the safe dictionary in response to messages received by the SwErl process.","type":"text"}],"type":"paragraph"},{"name":"Complexity","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"add - O(1), remove - O(1), get - O(1), getKeys - O(k) where "},{"type":"codeVoice","code":"k"},{"type":"text","text":" is the number of keys, getValues - O(v) where "},{"type":"codeVoice","code":"v"},{"type":"text","text":" is the number of values, getRaw - O(1). Swift’s ‘copy-on-write’ behavior allows the return of the raw, underlying dictionary without duplication."}]}],"style":"note"},{"name":"Author","type":"aside","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Lee Barney"}]}],"style":"note"},{"name":"Version","type":"aside","content":[{"inlineContent":[{"text":"0.1","type":"text"}],"type":"paragraph"}],"style":"note"}],"kind":"content"}],"relationshipsSections":[{"type":"conformsTo","title":"Conforms To","kind":"relationships","identifiers":["doc:\/\/SwErl\/SQ","doc:\/\/SwErl\/SH"]}],"kind":"symbol","identifier":{"url":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand","interfaceLanguage":"swift"},"sections":[],"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl"]]},"references":{"doc://SwErl/documentation/SwErl/SafeDictCommand":{"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SafeDictCommand"}],"title":"SafeDictCommand","abstract":[{"text":"Defines commands for interacting with a thread-safe dictionary.","type":"text"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SafeDictCommand","kind":"identifier"}],"url":"\/documentation\/swerl\/safedictcommand"},"doc://SwErl/documentation/SwErl/SafeDictCommand/getKeys":{"url":"\/documentation\/swerl\/safedictcommand\/getkeys","role":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"getKeys"}],"title":"SafeDictCommand.getKeys","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getKeys","kind":"symbol"},"doc://SwErl/documentation/SwErl/SafeDictCommand/Equatable-Implementations":{"url":"\/documentation\/swerl\/safedictcommand\/equatable-implementations","abstract":[],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/Equatable-Implementations","kind":"article","role":"collectionGroup","type":"topic","title":"Equatable Implementations"},"doc://SwErl/documentation/SwErl/SafeDictCommand/getRaw":{"url":"\/documentation\/swerl\/safedictcommand\/getraw","abstract":[],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getRaw","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"getRaw","kind":"identifier"}],"role":"symbol","type":"topic","title":"SafeDictCommand.getRaw"},"doc://SwErl/documentation/SwErl/SafeDictCommand/add":{"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/add","kind":"symbol","type":"topic","title":"SafeDictCommand.add","abstract":[],"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"add"}],"url":"\/documentation\/swerl\/safedictcommand\/add"},"doc://SwErl/documentation/SwErl/SafeDictCommand/get":{"url":"\/documentation\/swerl\/safedictcommand\/get","abstract":[],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/get","kind":"symbol","fragments":[{"text":"case","kind":"keyword"},{"text":" ","kind":"text"},{"text":"get","kind":"identifier"}],"role":"symbol","type":"topic","title":"SafeDictCommand.get"},"doc://SwErl/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SwErl\/SQ"},"doc://SwErl/documentation/SwErl/SafeDictCommand/getValues":{"fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"getValues"}],"abstract":[],"role":"symbol","type":"topic","url":"\/documentation\/swerl\/safedictcommand\/getvalues","title":"SafeDictCommand.getValues","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/getValues","kind":"symbol"},"doc://SwErl/documentation/SwErl/SafeDictCommand/remove":{"url":"\/documentation\/swerl\/safedictcommand\/remove","role":"symbol","abstract":[],"type":"topic","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"remove"}],"title":"SafeDictCommand.remove","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand\/remove","kind":"symbol"},"doc://SwErl/documentation/SwErl":{"url":"\/documentation\/swerl","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Concurrency - Erlang style"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl","title":"SwErl","role":"collection"},"doc://SwErl/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/SwErl\/SH"}}}