{"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"languages":["swift"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenStatemBehavior"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","preciseIdentifier":"s:5SwErl17OTPActor_behaviorP","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior","text":"OTPActor_behavior"}]}],"kind":"declarations"}],"sections":[],"seeAlsoSections":[{"title":"GenStateM - Generic State Machines","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/GenStateM"],"generated":true}],"topicSections":[{"title":"Type Methods","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/handleCall(message:current_state:)","doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/handleCast(message:current_state:)","doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/initialize(initialData:)","doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/notify(message:state:)","doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/unlinked(message:current_state:)"]}],"abstract":[{"type":"text","text":"This protocol enforces the types of behaviors required of every state machine in SwErl. It extends the OTPActor behavior like all non-process SwErl actors."}],"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl"]]},"identifier":{"url":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior","interfaceLanguage":"swift"},"metadata":{"title":"GenStatemBehavior","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenStatemBehavior"}],"modules":[{"name":"SwErl"}],"roleHeading":"Protocol","navigatorTitle":[{"kind":"identifier","text":"GenStatemBehavior"}],"symbolKind":"protocol","role":"symbol","externalID":"s:5SwErl17GenStatemBehaviorP"},"schemaVersion":{"patch":0,"major":0,"minor":3},"kind":"symbol","relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior"]}],"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swerl\/genstatembehavior"]}],"references":{"doc://SwErl/documentation/SwErl/GenStatemBehavior/handleCall(message:current_state:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleCall"},{"kind":"text","text":"("},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SwErlMessage","kind":"typeIdentifier","preciseIdentifier":"s:5SwErl0aB7Messagea"},{"text":", ","kind":"text"},{"text":"current_state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SwErlState","kind":"typeIdentifier","preciseIdentifier":"s:5SwErl0aB5Statea"},{"text":") -> (","kind":"text"},{"text":"SwErlResponse","kind":"typeIdentifier","preciseIdentifier":"s:5SwErl0aB8Responsea"},{"text":", ","kind":"text"},{"text":"SwErlState","kind":"typeIdentifier","preciseIdentifier":"s:5SwErl0aB5Statea"},{"text":")","kind":"text"}],"url":"\/documentation\/swerl\/genstatembehavior\/handlecall(message:current_state:)","title":"handleCall(message:current_state:)","required":true,"kind":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/handleCall(message:current_state:)","role":"symbol","type":"topic","abstract":[]},"doc://SwErl/documentation/SwErl/GenStateM":{"navigatorTitle":[{"kind":"identifier","text":"GenStateM"}],"url":"\/documentation\/swerl\/genstatem","kind":"symbol","type":"topic","abstract":[{"text":"This enumeration has, as elements, a set of generic functions that conduct","type":"text"},{"text":" ","type":"text"},{"text":"the communication required of all statem behaviors. These functions ensure","type":"text"},{"text":" ","type":"text"},{"text":"that the hook functions in each custom state machine are executed in the","type":"text"},{"text":" ","type":"text"},{"text":"correct order and store updated states correctly.","type":"text"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStateM","title":"GenStateM","fragments":[{"text":"enum","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenStateM"}],"role":"symbol"},"doc://SwErl/documentation/SwErl/GenStatemBehavior/notify(message:state:)":{"url":"\/documentation\/swerl\/genstatembehavior\/notify(message:state:)","kind":"symbol","type":"topic","abstract":[{"text":"This hook function is called if the ! operator is used to send a message to a ","type":"text"},{"inlineContent":[{"type":"text","text":"statem_behavior"}],"type":"emphasis"},{"type":"text","text":"."}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/notify(message:state:)","required":true,"title":"notify(message:state:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"notify"},{"kind":"text","text":"("},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SwErlMessage","preciseIdentifier":"s:5SwErl0aB7Messagea"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea"},{"kind":"text","text":")"}],"role":"symbol"},"doc://SwErl/documentation/SwErl/GenStatemBehavior/unlinked(message:current_state:)":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/unlinked(message:current_state:)","role":"symbol","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlinked"},{"kind":"text","text":"("},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SwErlMessage","preciseIdentifier":"s:5SwErl0aB7Messagea"},{"kind":"text","text":", "},{"kind":"externalParam","text":"current_state"},{"kind":"text","text":": "},{"text":"SwErlState","kind":"typeIdentifier","preciseIdentifier":"s:5SwErl0aB5Statea"},{"text":")","kind":"text"}],"type":"topic","title":"unlinked(message:current_state:)","abstract":[{"type":"text","text":"This hook function is used to react to a request to unlink request. At this point, when this function executes, the machine sub-type’s occurance has already been unlinked."}],"kind":"symbol","required":true,"url":"\/documentation\/swerl\/genstatembehavior\/unlinked(message:current_state:)"},"doc://SwErl/documentation/SwErl/GenStatemBehavior/handleCast(message:current_state:)":{"url":"\/documentation\/swerl\/genstatembehavior\/handlecast(message:current_state:)","title":"handleCast(message:current_state:)","type":"topic","abstract":[{"type":"text","text":"This hook function is used to deal with the results of using the "},{"type":"emphasis","inlineContent":[{"type":"text","text":"gen_statem.cast"}]},{"type":"text","text":" function. The logic it executes calculates an updated state for the state machine."}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/handleCast(message:current_state:)","role":"symbol","required":true,"kind":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleCast"},{"kind":"text","text":"("},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SwErlMessage","preciseIdentifier":"s:5SwErl0aB7Messagea"},{"kind":"text","text":", "},{"kind":"externalParam","text":"current_state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea"}]},"doc://SwErl/documentation/SwErl/OTPActor_behavior":{"navigatorTitle":[{"kind":"identifier","text":"OTPActor_behavior"}],"url":"\/documentation\/swerl\/otpactor_behavior","kind":"symbol","type":"topic","abstract":[{"text":"This behavior exists as a base protocol for all non-process SwErl actors. Since it is the base, all types of SwErl actors can be accumulated in shared data structures without resorting to using Swift’s ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" BIT (Built In Type).","type":"text"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior","title":"OTPActor_behavior","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OTPActor_behavior"}],"role":"symbol"},"doc://SwErl/documentation/SwErl/GenStatemBehavior":{"navigatorTitle":[{"text":"GenStatemBehavior","kind":"identifier"}],"url":"\/documentation\/swerl\/genstatembehavior","kind":"symbol","type":"topic","abstract":[{"text":"This protocol enforces the types of behaviors required of every state machine in SwErl. It extends the OTPActor behavior like all non-process SwErl actors.","type":"text"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior","title":"GenStatemBehavior","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenStatemBehavior","kind":"identifier"}],"role":"symbol"},"doc://SwErl/documentation/SwErl":{"url":"\/documentation\/swerl","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Concurrency - Erlang style"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl","title":"SwErl","role":"collection"},"doc://SwErl/documentation/SwErl/GenStatemBehavior/initialize(initialData:)":{"fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"initialize","kind":"identifier"},{"text":"(","kind":"text"},{"text":"initialData","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":") -> ","kind":"text"},{"text":"SwErlState","kind":"typeIdentifier","preciseIdentifier":"s:5SwErl0aB5Statea"}],"role":"symbol","required":true,"title":"initialize(initialData:)","abstract":[{"type":"text","text":"This hook function is used to create the first state of this state machine subtype’s occurance."}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/initialize(initialData:)","kind":"symbol","url":"\/documentation\/swerl\/genstatembehavior\/initialize(initialdata:)","type":"topic"}}}