{"sections":[],"seeAlsoSections":[{"identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/GenStateM"],"generated":true,"title":"GenStateM - Generic State Machines"}],"relationshipsSections":[{"identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior"],"type":"inheritsFrom","title":"Inherits From","kind":"relationships"}],"kind":"symbol","hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl"]]},"variants":[{"paths":["\/documentation\/swerl\/genstatembehavior"],"traits":[{"interfaceLanguage":"swift"}]}],"topicSections":[{"identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/handleCall(message:current_state:)","doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/handleCast(message:current_state:)","doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/initialize(initialData:)","doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/notify(message:state:)","doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/unlinked(message:current_state:)"],"title":"Type Methods"}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior"},"primaryContentSections":[{"declarations":[{"languages":["swift"],"platforms":["Linux"],"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenStatemBehavior"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"OTPActor_behavior","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior","preciseIdentifier":"s:5SwErl17OTPActor_behaviorP"}]}],"kind":"declarations"}],"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"navigatorTitle":[{"text":"GenStatemBehavior","kind":"identifier"}],"role":"symbol","title":"GenStatemBehavior","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenStatemBehavior","kind":"identifier"}],"roleHeading":"Protocol","symbolKind":"protocol","externalID":"s:5SwErl17GenStatemBehaviorP","modules":[{"name":"SwErl"}]},"abstract":[{"type":"text","text":"This protocol enforces the types of behaviors required of every state machine in SwErl. It extends the OTPActor behavior like all non-process SwErl actors."}],"references":{"doc://SwErl/documentation/SwErl/OTPActor_behavior":{"navigatorTitle":[{"text":"OTPActor_behavior","kind":"identifier"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior","role":"symbol","url":"\/documentation\/swerl\/otpactor_behavior","kind":"symbol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OTPActor_behavior","kind":"identifier"}],"title":"OTPActor_behavior","abstract":[{"type":"text","text":"This behavior exists as a base protocol for all non-process SwErl actors. Since it is the base, all types of SwErl actors can be accumulated in shared data structures without resorting to using Swift’s "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" BIT (Built In Type)."}],"type":"topic"},"doc://SwErl/documentation/SwErl/GenStatemBehavior/unlinked(message:current_state:)":{"abstract":[{"type":"text","text":"This hook function is used to react to a request to unlink request. At this point, when this function executes, the machine sub-type’s occurance has already been unlinked."}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"unlinked"},{"kind":"text","text":"("},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5SwErl0aB7Messagea","text":"SwErlMessage"},{"kind":"text","text":", "},{"kind":"externalParam","text":"current_state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5SwErl0aB5Statea","text":"SwErlState"},{"kind":"text","text":")"}],"title":"unlinked(message:current_state:)","url":"\/documentation\/swerl\/genstatembehavior\/unlinked(message:current_state:)","type":"topic","kind":"symbol","required":true,"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/unlinked(message:current_state:)"},"doc://SwErl/documentation/SwErl":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl","type":"topic","title":"SwErl","abstract":[{"text":"Concurrency - Erlang style","type":"text"}],"kind":"symbol","url":"\/documentation\/swerl","role":"collection"},"doc://SwErl/documentation/SwErl/GenStatemBehavior/initialize(initialData:)":{"type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/initialize(initialData:)","kind":"symbol","abstract":[{"text":"This hook function is used to create the first state of this state machine subtype’s occurance.","type":"text"}],"required":true,"title":"initialize(initialData:)","url":"\/documentation\/swerl\/genstatembehavior\/initialize(initialdata:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"initialize"},{"kind":"text","text":"("},{"kind":"externalParam","text":"initialData"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea"}],"role":"symbol"},"doc://SwErl/documentation/SwErl/GenStatemBehavior/notify(message:state:)":{"abstract":[{"type":"text","text":"This hook function is called if the ! operator is used to send a message to a "},{"inlineContent":[{"type":"text","text":"statem_behavior"}],"type":"emphasis"},{"text":".","type":"text"}],"title":"notify(message:state:)","kind":"symbol","type":"topic","fragments":[{"text":"static","kind":"keyword"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"notify"},{"text":"(","kind":"text"},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5SwErl0aB7Messagea","text":"SwErlMessage","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"externalParam","text":"state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:5SwErl0aB5Statea","text":"SwErlState"},{"kind":"text","text":")"}],"url":"\/documentation\/swerl\/genstatembehavior\/notify(message:state:)","required":true,"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/notify(message:state:)"},"doc://SwErl/documentation/SwErl/GenStatemBehavior/handleCall(message:current_state:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleCall","kind":"identifier"},{"text":"(","kind":"text"},{"text":"message","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SwErlMessage","preciseIdentifier":"s:5SwErl0aB7Messagea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"current_state","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"text":"SwErlResponse","preciseIdentifier":"s:5SwErl0aB8Responsea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier"},{"text":")","kind":"text"}],"kind":"symbol","url":"\/documentation\/swerl\/genstatembehavior\/handlecall(message:current_state:)","type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/handleCall(message:current_state:)","title":"handleCall(message:current_state:)","role":"symbol","required":true,"abstract":[]},"doc://SwErl/documentation/SwErl/GenStatemBehavior/handleCast(message:current_state:)":{"url":"\/documentation\/swerl\/genstatembehavior\/handlecast(message:current_state:)","abstract":[{"text":"This hook function is used to deal with the results of using the ","type":"text"},{"inlineContent":[{"type":"text","text":"gen_statem.cast"}],"type":"emphasis"},{"text":" function. The logic it executes calculates an updated state for the state machine.","type":"text"}],"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleCast"},{"kind":"text","text":"("},{"kind":"externalParam","text":"message"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SwErlMessage","preciseIdentifier":"s:5SwErl0aB7Messagea"},{"kind":"text","text":", "},{"kind":"externalParam","text":"current_state"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea"}],"type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior\/handleCast(message:current_state:)","title":"handleCast(message:current_state:)","kind":"symbol","required":true},"doc://SwErl/documentation/SwErl/GenStateM":{"navigatorTitle":[{"text":"GenStateM","kind":"identifier"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStateM","role":"symbol","url":"\/documentation\/swerl\/genstatem","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenStateM","kind":"identifier"}],"title":"GenStateM","abstract":[{"type":"text","text":"This enumeration has, as elements, a set of generic functions that conduct"},{"type":"text","text":" "},{"type":"text","text":"the communication required of all statem behaviors. These functions ensure"},{"type":"text","text":" "},{"type":"text","text":"that the hook functions in each custom state machine are executed in the"},{"type":"text","text":" "},{"type":"text","text":"correct order and store updated states correctly."}],"type":"topic"},"doc://SwErl/documentation/SwErl/GenStatemBehavior":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenStatemBehavior"}],"navigatorTitle":[{"kind":"identifier","text":"GenStatemBehavior"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior","type":"topic","title":"GenStatemBehavior","abstract":[{"text":"This protocol enforces the types of behaviors required of every state machine in SwErl. It extends the OTPActor behavior like all non-process SwErl actors.","type":"text"}],"kind":"symbol","url":"\/documentation\/swerl\/genstatembehavior","role":"symbol"}}}