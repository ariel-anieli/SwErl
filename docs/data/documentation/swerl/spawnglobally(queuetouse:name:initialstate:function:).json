{"metadata":{"symbolKind":"func","externalID":"s:5SwErl13spawnGlobally10queueToUse4name12initialState8functionAA3PidV8Dispatch0M5QueueC_SSypAA0aB6PassedO_ypSgt_yptAH_ypyptYbctKF","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"text":"spawnGlobally","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queueToUse","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":", ","kind":"text"},{"text":"initialState","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SwErlState","kind":"typeIdentifier","preciseIdentifier":"s:5SwErl0aB5Statea"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Pid","kind":"typeIdentifier","preciseIdentifier":"s:5SwErl3PidV"},{"text":", ","kind":"text"},{"text":"SwErlState","kind":"typeIdentifier","preciseIdentifier":"s:5SwErl0aB5Statea"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5SwErl0aB7Messagea","kind":"typeIdentifier","text":"SwErlMessage"},{"kind":"text","text":") -> ("},{"preciseIdentifier":"s:5SwErl0aB8Responsea","kind":"typeIdentifier","text":"SwErlResponse"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier","text":"SwErlState"},{"kind":"text","text":")) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"}],"title":"spawnGlobally(queueToUse:name:initialState:function:)","modules":[{"name":"SwErl"}],"role":"symbol","roleHeading":"Function"},"kind":"symbol","variants":[{"paths":["\/documentation\/swerl\/spawnglobally(queuetouse:name:initialstate:function:)"],"traits":[{"interfaceLanguage":"swift"}]}],"sections":[],"identifier":{"url":"doc:\/\/SwErl\/documentation\/SwErl\/spawnGlobally(queueToUse:name:initialState:function:)","interfaceLanguage":"swift"},"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl"]]},"abstract":[{"text":"This function is used to link a unique name to a stateful function or closure that is executed synchronously. The function is then available to be called remotely from any SwErl compatable node. A result is sent back to the process sending the initial message. Any DispatchQueue desired for running the function or closure can be passed as the first parameter. The state can be any valid Swift type, a tuple, a list, a dictionary, optional, closure, etc.","type":"text"}],"primaryContentSections":[{"kind":"declarations","declarations":[{"languages":["swift"],"tokens":[{"text":"@discardableResult","kind":"attribute"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"spawnGlobally","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queueToUse","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC","kind":"typeIdentifier"},{"text":" = DispatchQueue.global(), ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initialState","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SwErlState","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"@escaping","kind":"keyword"},{"text":" (","kind":"text"},{"text":"Pid","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Pid","preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"SwErlState","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"SwErlMessage","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlMessage","preciseIdentifier":"s:5SwErl0aB7Messagea","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"text":"SwErlResponse","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlResponse","preciseIdentifier":"s:5SwErl0aB8Responsea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"SwErlState","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier"},{"text":")) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"text":"Pid","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Pid","preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier"}],"platforms":["Linux"]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"text":"queueToUse: any DispatchQueue, custom or built-in.. Default is ","type":"text"},{"type":"emphasis","inlineContent":[{"type":"text","text":"DispatchQueue.global()"}]}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"name: a unique string used as an identifier.","type":"text"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"function: the function or closure to execute using the DispatchQueue"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"text":"Value: a SwErl Pid","type":"text"}]}]}]}]}],"schemaVersion":{"minor":3,"major":0,"patch":0},"references":{"doc://SwErl/documentation/SwErl/SwErlResponse":{"title":"SwErlResponse","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"SwErlResponse","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlResponse","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swerl\/swerlresponse","navigatorTitle":[{"text":"SwErlResponse","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/spawnGlobally(queueToUse:name:initialState:function:)":{"url":"\/documentation\/swerl\/spawnglobally(queuetouse:name:initialstate:function:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"spawnGlobally","kind":"identifier"},{"text":"(","kind":"text"},{"text":"queueToUse","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"initialState","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:5SwErl0aB5Statea","text":"SwErlState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": (","kind":"text"},{"preciseIdentifier":"s:5SwErl3PidV","text":"Pid","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5SwErl0aB5Statea","text":"SwErlState","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5SwErl0aB7Messagea","text":"SwErlMessage","kind":"typeIdentifier"},{"text":") -> (","kind":"text"},{"preciseIdentifier":"s:5SwErl0aB8Responsea","text":"SwErlResponse","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"preciseIdentifier":"s:5SwErl0aB5Statea","text":"SwErlState","kind":"typeIdentifier"},{"text":")) ","kind":"text"},{"text":"throws","kind":"keyword"},{"text":" -> ","kind":"text"},{"preciseIdentifier":"s:5SwErl3PidV","text":"Pid","kind":"typeIdentifier"}],"type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/spawnGlobally(queueToUse:name:initialState:function:)","title":"spawnGlobally(queueToUse:name:initialState:function:)","kind":"symbol","abstract":[{"text":"This function is used to link a unique name to a stateful function or closure that is executed synchronously. The function is then available to be called remotely from any SwErl compatable node. A result is sent back to the process sending the initial message. Any DispatchQueue desired for running the function or closure can be passed as the first parameter. The state can be any valid Swift type, a tuple, a list, a dictionary, optional, closure, etc.","type":"text"}],"role":"symbol"},"doc://SwErl/documentation/SwErl/SwErlState":{"title":"SwErlState","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"SwErlState","kind":"identifier"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlState","kind":"symbol","abstract":[],"type":"topic","url":"\/documentation\/swerl\/swerlstate","navigatorTitle":[{"text":"SwErlState","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/SwErlMessage":{"navigatorTitle":[{"text":"SwErlMessage","kind":"identifier"}],"url":"\/documentation\/swerl\/swerlmessage","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlMessage","title":"SwErlMessage","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"text":"SwErlMessage","kind":"identifier"}],"role":"symbol"},"doc://SwErl/documentation/SwErl/Pid":{"navigatorTitle":[{"text":"Pid","kind":"identifier"}],"url":"\/documentation\/swerl\/pid","kind":"symbol","type":"topic","abstract":[],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Pid","title":"Pid","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"Pid","kind":"identifier"}],"role":"symbol"},"doc://SwErl/documentation/SwErl":{"url":"\/documentation\/swerl","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Concurrency - Erlang style"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl","title":"SwErl","role":"collection"}}}