{"topicSections":[{"title":"Type Methods","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/handleCall(request:data:)","doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/handleCast(request:data:)","doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/initializeData(_:)","doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/terminateCleanup(reason:data:)"]}],"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl"]]},"metadata":{"modules":[{"name":"SwErl"}],"roleHeading":"Protocol","externalID":"s:5SwErl17GenServerBehaviorP","navigatorTitle":[{"text":"GenServerBehavior","kind":"identifier"}],"symbolKind":"protocol","fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenServerBehavior","kind":"identifier"}],"role":"symbol","title":"GenServerBehavior"},"schemaVersion":{"patch":0,"minor":3,"major":0},"sections":[],"primaryContentSections":[{"declarations":[{"tokens":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenServerBehavior"},{"kind":"text","text":" : "},{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior","kind":"typeIdentifier","preciseIdentifier":"s:5SwErl17OTPActor_behaviorP","text":"OTPActor_behavior"}],"languages":["swift"],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"anchor":"overview","type":"heading","text":"Overview","level":2},{"type":"aside","content":[{"type":"paragraph","inlineContent":[{"text":"Sylvia Deal","type":"text"}]}],"name":"Author","style":"note"},{"type":"aside","content":[{"inlineContent":[{"type":"text","text":"0.1"}],"type":"paragraph"}],"name":"Version","style":"note"}],"kind":"content"}],"variants":[{"paths":["\/documentation\/swerl\/genserverbehavior"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior"},"abstract":[{"type":"text","text":"Defines the behavior for a generic server ("},{"code":"GenServer","type":"codeVoice"},{"type":"text","text":") in the SwErl framework."},{"type":"text","text":" "},{"code":"GenServerBehavior","type":"codeVoice"},{"type":"text","text":" protocol allows for the creation of stateful SwErl processes that support synchronous calls and replies through a separate API."},{"text":" ","type":"text"},{"text":"This protocol is designed for user-defined processes, enabling the encapsulation of process state within the registry.","type":"text"},{"text":" ","type":"text"},{"text":"Types conforming to this protocol are utilized to define the functionality of user-created ","type":"text"},{"code":"GenServer","type":"codeVoice"},{"text":" instances.","type":"text"},{"text":" ","type":"text"},{"text":"Multiple, separate ","type":"text"},{"code":"GenServer","type":"codeVoice"},{"type":"text","text":" instances can be initiated from a single conforming type. Each instance operates within its own execution context as a separate process."},{"type":"text","text":" "},{"type":"text","text":"Conforming types are recommended to be static, leveraging SwErl infrastructure for state management."}],"relationshipsSections":[{"type":"inheritsFrom","title":"Inherits From","kind":"relationships","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior"]}],"seeAlsoSections":[{"generated":true,"title":"GenServer - Generic Servers","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/GenServer"]}],"kind":"symbol","references":{"doc://SwErl/documentation/SwErl/GenServerBehavior/initializeData(_:)":{"role":"symbol","title":"initializeData(_:)","kind":"symbol","abstract":[{"type":"text","text":"Called during server startup, allowing for the initial state modification or validation."}],"required":true,"type":"topic","url":"\/documentation\/swerl\/genserverbehavior\/initializedata(_:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"initializeData","kind":"identifier"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/initializeData(_:)"},"doc://SwErl/documentation/SwErl/GenServer":{"navigatorTitle":[{"kind":"identifier","text":"GenServer"}],"url":"\/documentation\/swerl\/genserver","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Provides the API for creating, messaging, and managing "},{"code":"GenServer","type":"codeVoice"},{"text":" instances within the SwErl framework.","type":"text"},{"text":" ","type":"text"},{"text":"This static type facilitates the creation and interaction with ","type":"text"},{"code":"GenServer","type":"codeVoice"},{"text":" instances, encapsulating the functionality","type":"text"},{"type":"text","text":" "},{"type":"text","text":"for synchronous and asynchronous communication, process lifecycle management, and state handling."}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServer","title":"GenServer","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenServer"}],"role":"symbol"},"doc://SwErl/documentation/SwErl/GenServerBehavior":{"navigatorTitle":[{"text":"GenServerBehavior","kind":"identifier"}],"url":"\/documentation\/swerl\/genserverbehavior","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Defines the behavior for a generic server ("},{"type":"codeVoice","code":"GenServer"},{"type":"text","text":") in the SwErl framework."},{"type":"text","text":" "},{"type":"codeVoice","code":"GenServerBehavior"},{"type":"text","text":" protocol allows for the creation of stateful SwErl processes that support synchronous calls and replies through a separate API."},{"type":"text","text":" "},{"type":"text","text":"This protocol is designed for user-defined processes, enabling the encapsulation of process state within the registry."},{"type":"text","text":" "},{"type":"text","text":"Types conforming to this protocol are utilized to define the functionality of user-created "},{"type":"codeVoice","code":"GenServer"},{"type":"text","text":" instances."},{"type":"text","text":" "},{"type":"text","text":"Multiple, separate "},{"type":"codeVoice","code":"GenServer"},{"type":"text","text":" instances can be initiated from a single conforming type. Each instance operates within its own execution context as a separate process."},{"type":"text","text":" "},{"type":"text","text":"Conforming types are recommended to be static, leveraging SwErl infrastructure for state management."}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior","title":"GenServerBehavior","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenServerBehavior"}],"role":"symbol"},"doc://SwErl/documentation/SwErl/OTPActor_behavior":{"navigatorTitle":[{"kind":"identifier","text":"OTPActor_behavior"}],"url":"\/documentation\/swerl\/otpactor_behavior","kind":"symbol","type":"topic","abstract":[{"text":"This behavior exists as a base protocol for all non-process SwErl actors. Since it is the base, all types of SwErl actors can be accumulated in shared data structures without resorting to using Swiftâ€™s ","type":"text"},{"code":"Any","type":"codeVoice"},{"text":" BIT (Built In Type).","type":"text"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior","title":"OTPActor_behavior","fragments":[{"text":"protocol","kind":"keyword"},{"kind":"text","text":" "},{"kind":"identifier","text":"OTPActor_behavior"}],"role":"symbol"},"doc://SwErl/documentation/SwErl/GenServerBehavior/terminateCleanup(reason:data:)":{"url":"\/documentation\/swerl\/genserverbehavior\/terminatecleanup(reason:data:)","role":"symbol","title":"terminateCleanup(reason:data:)","type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/terminateCleanup(reason:data:)","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"terminateCleanup","kind":"identifier"},{"text":"(","kind":"text"},{"text":"reason","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?)","kind":"text"}],"abstract":[{"text":"Executed before a server is removed from the registry, typically for cleanup based on the provided termination reason.","type":"text"}],"kind":"symbol","required":true},"doc://SwErl/documentation/SwErl/GenServerBehavior/handleCast(request:data:)":{"url":"\/documentation\/swerl\/genserverbehavior\/handlecast(request:data:)","role":"symbol","title":"handleCast(request:data:)","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/handleCast(request:data:)","abstract":[{"type":"text","text":"Handles asynchronous cast messages, where no reply is expected by the sender."}],"type":"topic","required":true,"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"handleCast","kind":"identifier"},{"text":"(","kind":"text"},{"text":"request","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"kind":"symbol"},"doc://SwErl/documentation/SwErl":{"url":"\/documentation\/swerl","kind":"symbol","type":"topic","abstract":[{"type":"text","text":"Concurrency - Erlang style"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl","title":"SwErl","role":"collection"},"doc://SwErl/documentation/SwErl/GenServerBehavior/handleCall(request:data:)":{"type":"topic","kind":"symbol","required":true,"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"text":" ","kind":"text"},{"text":"handleCall","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":") -> ("},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"keyword","text":"Any"},{"kind":"text","text":")"}],"url":"\/documentation\/swerl\/genserverbehavior\/handlecall(request:data:)","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/handleCall(request:data:)","title":"handleCall(request:data:)","abstract":[{"text":"Handles synchronous call messages, where the sender awaits a reply.","type":"text"}]}}}