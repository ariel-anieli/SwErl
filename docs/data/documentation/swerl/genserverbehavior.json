{"sections":[],"kind":"symbol","topicSections":[{"identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/handleCall(request:data:)","doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/handleCast(request:data:)","doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/initializeData(_:)","doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/terminateCleanup(reason:data:)"],"title":"Type Methods"}],"abstract":[{"text":"Defines the behavior for a generic server (","type":"text"},{"code":"GenServer","type":"codeVoice"},{"text":") in the SwErl framework.","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"GenServerBehavior"},{"type":"text","text":" protocol allows for the creation of stateful SwErl processes that support synchronous calls and replies through a separate API."},{"type":"text","text":" "},{"type":"text","text":"This protocol is designed for user-defined processes, enabling the encapsulation of process state within the registry."},{"type":"text","text":" "},{"type":"text","text":"Types conforming to this protocol are utilized to define the functionality of user-created "},{"type":"codeVoice","code":"GenServer"},{"type":"text","text":" instances."},{"type":"text","text":" "},{"type":"text","text":"Multiple, separate "},{"type":"codeVoice","code":"GenServer"},{"type":"text","text":" instances can be initiated from a single conforming type. Each instance operates within its own execution context as a separate process."},{"type":"text","text":" "},{"type":"text","text":"Conforming types are recommended to be static, leveraging SwErl infrastructure for state management."}],"schemaVersion":{"major":0,"patch":0,"minor":3},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swerl\/genserverbehavior"]}],"seeAlsoSections":[{"identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/GenServer"],"title":"GenServer - Generic Servers","generated":true}],"identifier":{"url":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior","interfaceLanguage":"swift"},"primaryContentSections":[{"declarations":[{"platforms":["Linux"],"tokens":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenServerBehavior","kind":"identifier"},{"text":" : ","kind":"text"},{"preciseIdentifier":"s:5SwErl17OTPActor_behaviorP","text":"OTPActor_behavior","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior","kind":"typeIdentifier"}],"languages":["swift"]}],"kind":"declarations"},{"content":[{"text":"Overview","type":"heading","level":2,"anchor":"overview"},{"name":"Author","type":"aside","style":"note","content":[{"type":"paragraph","inlineContent":[{"text":"Sylvia Deal","type":"text"}]}]},{"name":"Version","type":"aside","style":"note","content":[{"inlineContent":[{"type":"text","text":"0.1"}],"type":"paragraph"}]}],"kind":"content"}],"metadata":{"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenServerBehavior","kind":"identifier"}],"modules":[{"name":"SwErl"}],"roleHeading":"Protocol","navigatorTitle":[{"text":"GenServerBehavior","kind":"identifier"}],"externalID":"s:5SwErl17GenServerBehaviorP","role":"symbol","symbolKind":"protocol","title":"GenServerBehavior"},"relationshipsSections":[{"type":"inheritsFrom","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior"],"title":"Inherits From","kind":"relationships"}],"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl"]]},"references":{"doc://SwErl/documentation/SwErl/OTPActor_behavior":{"abstract":[{"text":"This behavior exists as a base protocol for all non-process SwErl actors. Since it is the base, all types of SwErl actors can be accumulated in shared data structures without resorting to using Swiftâ€™s ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" BIT (Built In Type).","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior","title":"OTPActor_behavior","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/otpactor_behavior","navigatorTitle":[{"text":"OTPActor_behavior","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OTPActor_behavior","kind":"identifier"}]},"doc://SwErl/documentation/SwErl":{"type":"topic","abstract":[{"type":"text","text":"Concurrency - Erlang style"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl","url":"\/documentation\/swerl","title":"SwErl","role":"collection","kind":"symbol"},"doc://SwErl/documentation/SwErl/GenServerBehavior/initializeData(_:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"initializeData","kind":"identifier"},{"text":"(","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?) -> ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?","kind":"text"}],"title":"initializeData(_:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/initializeData(_:)","required":true,"kind":"symbol","url":"\/documentation\/swerl\/genserverbehavior\/initializedata(_:)","abstract":[{"type":"text","text":"Called during server startup, allowing for the initial state modification or validation."}]},"doc://SwErl/documentation/SwErl/GenServer":{"kind":"symbol","type":"topic","url":"\/documentation\/swerl\/genserver","title":"GenServer","role":"symbol","abstract":[{"type":"text","text":"Provides the API for creating, messaging, and managing "},{"code":"GenServer","type":"codeVoice"},{"text":" instances within the SwErl framework.","type":"text"},{"text":" ","type":"text"},{"text":"This static type facilitates the creation and interaction with ","type":"text"},{"code":"GenServer","type":"codeVoice"},{"text":" instances, encapsulating the functionality","type":"text"},{"text":" ","type":"text"},{"text":"for synchronous and asynchronous communication, process lifecycle management, and state handling.","type":"text"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServer","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenServer"}],"navigatorTitle":[{"kind":"identifier","text":"GenServer"}]},"doc://SwErl/documentation/SwErl/GenServerBehavior/terminateCleanup(reason:data:)":{"fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"terminateCleanup","kind":"identifier"},{"text":"(","kind":"text"},{"text":"reason","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"data","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"Any","kind":"keyword"},{"text":"?)","kind":"text"}],"title":"terminateCleanup(reason:data:)","role":"symbol","type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/terminateCleanup(reason:data:)","required":true,"kind":"symbol","url":"\/documentation\/swerl\/genserverbehavior\/terminatecleanup(reason:data:)","abstract":[{"type":"text","text":"Executed before a server is removed from the registry, typically for cleanup based on the provided termination reason."}]},"doc://SwErl/documentation/SwErl/GenServerBehavior/handleCall(request:data:)":{"kind":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/handleCall(request:data:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleCall"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"text":"Any","kind":"keyword"},{"text":") -> (","kind":"text"},{"text":"Any","kind":"keyword"},{"text":", ","kind":"text"},{"text":"Any","kind":"keyword"},{"kind":"text","text":")"}],"title":"handleCall(request:data:)","required":true,"abstract":[{"type":"text","text":"Handles synchronous call messages, where the sender awaits a reply."}],"role":"symbol","type":"topic","url":"\/documentation\/swerl\/genserverbehavior\/handlecall(request:data:)"},"doc://SwErl/documentation/SwErl/GenServerBehavior":{"abstract":[{"text":"Defines the behavior for a generic server (","type":"text"},{"type":"codeVoice","code":"GenServer"},{"text":") in the SwErl framework.","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"GenServerBehavior"},{"text":" protocol allows for the creation of stateful SwErl processes that support synchronous calls and replies through a separate API.","type":"text"},{"text":" ","type":"text"},{"text":"This protocol is designed for user-defined processes, enabling the encapsulation of process state within the registry.","type":"text"},{"text":" ","type":"text"},{"text":"Types conforming to this protocol are utilized to define the functionality of user-created ","type":"text"},{"type":"codeVoice","code":"GenServer"},{"text":" instances.","type":"text"},{"text":" ","type":"text"},{"text":"Multiple, separate ","type":"text"},{"type":"codeVoice","code":"GenServer"},{"text":" instances can be initiated from a single conforming type. Each instance operates within its own execution context as a separate process.","type":"text"},{"text":" ","type":"text"},{"text":"Conforming types are recommended to be static, leveraging SwErl infrastructure for state management.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior","title":"GenServerBehavior","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/genserverbehavior","navigatorTitle":[{"text":"GenServerBehavior","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenServerBehavior","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/GenServerBehavior/handleCast(request:data:)":{"kind":"symbol","abstract":[{"text":"Handles asynchronous cast messages, where no reply is expected by the sender.","type":"text"}],"title":"handleCast(request:data:)","required":true,"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior\/handleCast(request:data:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"handleCast"},{"kind":"text","text":"("},{"kind":"externalParam","text":"request"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":", "},{"kind":"externalParam","text":"data"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?) -> "},{"kind":"keyword","text":"Any"},{"kind":"text","text":"?"}],"type":"topic","url":"\/documentation\/swerl\/genserverbehavior\/handlecast(request:data:)"}}}