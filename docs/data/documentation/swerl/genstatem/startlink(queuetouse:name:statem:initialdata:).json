{"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl","doc:\/\/SwErl\/documentation\/SwErl\/GenStateM"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwErl\/documentation\/SwErl\/GenStateM\/startLink(queueToUse:name:statem:initialData:)"},"variants":[{"paths":["\/documentation\/swerl\/genstatem\/startlink(queuetouse:name:statem:initialdata:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"symbolKind":"method","fragments":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"startLink","kind":"identifier"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"queueToUse"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"name","kind":"externalParam"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"statem"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"initialData"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5SwErl3PidV","text":"Pid"}],"title":"startLink(queueToUse:name:statem:initialData:)","externalID":"s:5SwErl9GenStateMO9startLink10queueToUse4name6statem11initialDataAA3PidV8Dispatch0O5QueueC_SSxmyptKAA0C14StatemBehaviorRzlFZ","modules":[{"name":"SwErl"}],"roleHeading":"Type Method","role":"symbol"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"This function registers, by name, and prepares an occurance of a specified sub-type of a generic state machine using the specified data. Once this function completes, the sub-type occurance can be used. All functions applied to the occurance will execute on the main or any other thread depending on the DispatchQueue stated. By default, the global queue will be used, but if the main() queue is passed as a parameter, the sub-type’s functions will all run on the main\/UI thread."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"kind":"attribute","text":"@discardableResult"},{"kind":"text","text":" "},{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startLink"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"queueToUse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"DispatchQueue","preciseIdentifier":"s:8Dispatch0A5QueueC"},{"kind":"text","text":" = DispatchQueue.global(), "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"statem"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"initialData"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Pid","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Pid","preciseIdentifier":"s:5SwErl3PidV"},{"kind":"text","text":" "},{"kind":"keyword","text":"where"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":" : "},{"kind":"typeIdentifier","text":"GenStatemBehavior","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior","preciseIdentifier":"s:5SwErl17GenStatemBehaviorP"}],"platforms":["Linux"]}],"kind":"declarations"},{"content":[{"text":"Discussion","anchor":"discussion","type":"heading","level":2},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"queueToUse: the desired queue for the processes should use. Default:main()"}]}]},{"content":[{"inlineContent":[{"text":"name: a name to link to an occurance of the statem sub-type.","type":"text"}],"type":"paragraph"}]},{"content":[{"inlineContent":[{"text":"statem: the sub-type of statem being linked to.","type":"text"}],"type":"paragraph"}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"initialData: any desired data used to initialize the statem sub-type occurance’s state. This data is passsed to the statem sub-type’s initialize function."}]}]},{"content":[{"inlineContent":[{"text":"Value: a Pid that uniquely identifies the occurance of the sub-type of gen_statem the name is linked to","type":"text"}],"type":"paragraph"}]}]}],"kind":"content"}],"sections":[],"references":{"doc://SwErl/documentation/SwErl/GenStateM/startLink(queueToUse:name:statem:initialData:)":{"fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"startLink"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"T"},{"kind":"text","text":">("},{"kind":"externalParam","text":"queueToUse"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:8Dispatch0A5QueueC","text":"DispatchQueue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"statem"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"T"},{"kind":"text","text":".Type, "},{"kind":"externalParam","text":"initialData"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","preciseIdentifier":"s:5SwErl3PidV","text":"Pid"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStateM\/startLink(queueToUse:name:statem:initialData:)","type":"topic","title":"startLink(queueToUse:name:statem:initialData:)","abstract":[{"text":"This function registers, by name, and prepares an occurance of a specified sub-type of a generic state machine using the specified data. Once this function completes, the sub-type occurance can be used. All functions applied to the occurance will execute on the main or any other thread depending on the DispatchQueue stated. By default, the global queue will be used, but if the main() queue is passed as a parameter, the sub-type’s functions will all run on the main\/UI thread.","type":"text"}],"kind":"symbol","url":"\/documentation\/swerl\/genstatem\/startlink(queuetouse:name:statem:initialdata:)","role":"symbol"},"doc://SwErl/documentation/SwErl/GenStatemBehavior":{"fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenStatemBehavior"}],"navigatorTitle":[{"kind":"identifier","text":"GenStatemBehavior"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior","type":"topic","title":"GenStatemBehavior","abstract":[{"text":"This protocol enforces the types of behaviors required of every state machine in SwErl. It extends the OTPActor behavior like all non-process SwErl actors.","type":"text"}],"kind":"symbol","url":"\/documentation\/swerl\/genstatembehavior","role":"symbol"},"doc://SwErl/documentation/SwErl/GenStateM":{"navigatorTitle":[{"text":"GenStateM","kind":"identifier"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStateM","role":"symbol","url":"\/documentation\/swerl\/genstatem","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenStateM","kind":"identifier"}],"title":"GenStateM","abstract":[{"type":"text","text":"This enumeration has, as elements, a set of generic functions that conduct"},{"type":"text","text":" "},{"type":"text","text":"the communication required of all statem behaviors. These functions ensure"},{"type":"text","text":" "},{"type":"text","text":"that the hook functions in each custom state machine are executed in the"},{"type":"text","text":" "},{"type":"text","text":"correct order and store updated states correctly."}],"type":"topic"},"doc://SwErl/documentation/SwErl":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl","type":"topic","title":"SwErl","abstract":[{"text":"Concurrency - Erlang style","type":"text"}],"kind":"symbol","url":"\/documentation\/swerl","role":"collection"},"doc://SwErl/documentation/SwErl/Pid":{"navigatorTitle":[{"text":"Pid","kind":"identifier"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Pid","role":"symbol","url":"\/documentation\/swerl\/pid","kind":"symbol","fragments":[{"kind":"keyword","text":"struct"},{"text":" ","kind":"text"},{"text":"Pid","kind":"identifier"}],"title":"Pid","abstract":[],"type":"topic"}}}