{"hierarchy":{"paths":[["doc:\/\/SwErl\/documentation\/SwErl","doc:\/\/SwErl\/documentation\/SwErl\/EventManager"]]},"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwErl\/documentation\/SwErl\/EventManager\/unlink(name:)"},"variants":[{"paths":["\/documentation\/swerl\/eventmanager\/unlink(name:)"],"traits":[{"interfaceLanguage":"swift"}]}],"metadata":{"role":"symbol","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlink","kind":"identifier"},{"text":"(","kind":"text"},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","preciseIdentifier":"s:SS","text":"String"},{"kind":"text","text":")"}],"externalID":"s:5SwErl12EventManagerO6unlink4nameySS_tFZ","title":"unlink(name:)","modules":[{"name":"SwErl"}],"symbolKind":"method","roleHeading":"Type Method"},"schemaVersion":{"minor":3,"major":0,"patch":0},"kind":"symbol","abstract":[{"type":"text","text":"Unlinks the information of an occurrence of an event manager. This operation does not affect other occurrences of the sub-type registered under different names. If the specified name does not match any linked occurrence of an event manager, the application’s state remains valid, and no exceptions are thrown, resulting in a quiet failure."}],"primaryContentSections":[{"declarations":[{"languages":["swift"],"tokens":[{"text":"static","kind":"keyword"},{"text":" ","kind":"text"},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlink","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","kind":"typeIdentifier","preciseIdentifier":"s:SS"},{"text":")","kind":"text"}],"platforms":["Linux"]}],"kind":"declarations"},{"kind":"parameters","parameters":[{"name":"name","content":[{"type":"paragraph","inlineContent":[{"text":"The name of a registered occurrence of a state management (statem) sub-type.","type":"text"}]}]}]},{"kind":"content","content":[{"type":"heading","level":2,"text":"Discussion","anchor":"discussion"},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"O(1), as unlinking is a direct operation involving lookup and removal from the registry."}]}],"type":"aside","name":"Complexity","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":"Lee Barney"}],"type":"paragraph"}],"type":"aside","name":"Author","style":"note"},{"content":[{"inlineContent":[{"type":"text","text":"0.1"}],"type":"paragraph"}],"type":"aside","name":"Version","style":"note"}]}],"sections":[],"references":{"doc://SwErl/documentation/SwErl/EventManager":{"navigatorTitle":[{"text":"EventManager","kind":"identifier"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/EventManager","role":"symbol","url":"\/documentation\/swerl\/eventmanager","kind":"symbol","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"EventManager","kind":"identifier"}],"title":"EventManager","abstract":[{"type":"text","text":"Enumeration containing a set of generic functions responsible for managing communication within _EventManager_s. These functions are designed to:"}],"type":"topic"},"doc://SwErl/documentation/SwErl/EventManager/unlink(name:)":{"type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/EventManager\/unlink(name:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"unlink","kind":"identifier"},{"text":"(","kind":"text"},{"text":"name","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"kind":"text","text":")"}],"role":"symbol","kind":"symbol","url":"\/documentation\/swerl\/eventmanager\/unlink(name:)","abstract":[{"text":"Unlinks the information of an occurrence of an event manager. This operation does not affect other occurrences of the sub-type registered under different names. If the specified name does not match any linked occurrence of an event manager, the application’s state remains valid, and no exceptions are thrown, resulting in a quiet failure.","type":"text"}],"title":"unlink(name:)"},"doc://SwErl/documentation/SwErl":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl","type":"topic","title":"SwErl","abstract":[{"text":"Concurrency - Erlang style","type":"text"}],"kind":"symbol","url":"\/documentation\/swerl","role":"collection"}}}