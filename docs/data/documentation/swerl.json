{"identifier":{"interfaceLanguage":"swift","url":"doc:\/\/SwErl\/documentation\/SwErl"},"variants":[{"traits":[{"interfaceLanguage":"swift"}],"paths":["\/documentation\/swerl"]}],"kind":"symbol","abstract":[{"text":"Concurrency - Erlang style","type":"text"}],"sections":[],"hierarchy":{"paths":[[]]},"schemaVersion":{"patch":0,"minor":3,"major":0},"metadata":{"role":"collection","title":"SwErl","externalID":"SwErl","modules":[{"name":"SwErl"}],"roleHeading":"Framework","symbolKind":"module"},"primaryContentSections":[{"kind":"content","content":[{"level":2,"anchor":"Overview","type":"heading","text":"Overview"},{"inlineContent":[{"text":"SwErl is a general purpose concurrency library conforming to the design patterns and principles found in the Erlang Programming Language. swerl also includes swerl Node, an as-of-yet incomplete library allowing native Swift to connect to a distributed Erlang system as a near-fully featured node. If you are a Swift Developer with little to no Erlang experience, a quick primer for swerl","type":"text"}],"type":"paragraph"}]}],"topicSections":[{"identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/GettingStarted"],"title":"Getting Started"},{"identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/spawnsysf(_:queueToUse:name:initialState:function:)"],"title":"Processes"},{"title":"GenServer - Generic Servers","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/GenServer","doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior"]},{"title":"GenStateM - Generic State Machines","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/GenStateM","doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior"]},{"title":"GenEvent - Generic Events","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/EventManager"]},{"title":"Contribute to SwErl","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/Contribute"]},{"title":"Protocols","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior"]},{"title":"Structures","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/Pid","doc:\/\/SwErl\/documentation\/SwErl\/SwErlAtom","doc:\/\/SwErl\/documentation\/SwErl\/SwErlNewerRef","doc:\/\/SwErl\/documentation\/SwErl\/SwErlProcess","doc:\/\/SwErl\/documentation\/SwErl\/SwErlRef"]},{"title":"Functions","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/buildSafe(dictionary:named:)","doc:\/\/SwErl\/documentation\/SwErl\/spawnGlobally(queueToUse:name:function:)","doc:\/\/SwErl\/documentation\/SwErl\/spawnGlobally(queueToUse:name:initialState:function:)","doc:\/\/SwErl\/documentation\/SwErl\/spawnasysf(queueToUse:name:initialState:function:)","doc:\/\/SwErl\/documentation\/SwErl\/spawnasysl(_:queueToUse:name:function:)"]},{"title":"Type Aliases","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/SwErlClosure","doc:\/\/SwErl\/documentation\/SwErl\/SwErlMessage","doc:\/\/SwErl\/documentation\/SwErl\/SwErlResponse","doc:\/\/SwErl\/documentation\/SwErl\/SwErlState","doc:\/\/SwErl\/documentation\/SwErl\/SwErlStatelessHandler","doc:\/\/SwErl\/documentation\/SwErl\/SwErlValue"]},{"title":"Enumerations","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/RegistrationType","doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand","doc:\/\/SwErl\/documentation\/SwErl\/SwErlError","doc:\/\/SwErl\/documentation\/SwErl\/SwErlPassed"]},{"title":"Extended Modules","identifiers":["doc:\/\/SwErl\/documentation\/SwErl\/Swift"]}],"references":{"doc://SwErl/documentation/SwErl/SwErlAtom":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlAtom","kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SwErlAtom"}],"role":"symbol","url":"\/documentation\/swerl\/swerlatom","title":"SwErlAtom","type":"topic","fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwErlAtom","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/SwErlStatelessHandler":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlStatelessHandler","kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SwErlStatelessHandler"}],"role":"symbol","url":"\/documentation\/swerl\/swerlstatelesshandler","title":"SwErlStatelessHandler","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwErlStatelessHandler"}]},"doc://SwErl/documentation/SwErl/SwErlResponse":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlResponse","kind":"symbol","abstract":[],"navigatorTitle":[{"kind":"identifier","text":"SwErlResponse"}],"role":"symbol","url":"\/documentation\/swerl\/swerlresponse","title":"SwErlResponse","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwErlResponse"}]},"doc://SwErl/documentation/SwErl/spawnsysf(_:queueToUse:name:initialState:function:)":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/spawnsysf(_:queueToUse:name:initialState:function:)","kind":"symbol","abstract":[{"type":"text","text":"This function is used to link a unique name to a stateful function or closure that is executed synchronously with a result being sent to the process sending the message. Any DispatchQueue desired for running the function or closure can be passed as the first parameter. The state can be any valid Swift type, a tuple, a list, a dictionary, optional, closure, etc."}],"role":"symbol","url":"\/documentation\/swerl\/spawnsysf(_:queuetouse:name:initialstate:function:)","title":"spawnsysf(_:queueToUse:name:initialState:function:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spawnsysf"},{"kind":"text","text":"("},{"preciseIdentifier":"s:5SwErl16RegistrationTypeO","kind":"typeIdentifier","text":"RegistrationType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"queueToUse"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8Dispatch0A5QueueC","kind":"typeIdentifier","text":"DispatchQueue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"text":"String","preciseIdentifier":"s:SS","kind":"typeIdentifier"},{"text":"?, ","kind":"text"},{"text":"initialState","kind":"externalParam"},{"text":": ","kind":"text"},{"text":"SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier"},{"text":", ","kind":"text"},{"text":"function","kind":"externalParam"},{"text":": (","kind":"text"},{"text":"Pid","preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SwErlMessage","preciseIdentifier":"s:5SwErl0aB7Messagea"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea"},{"kind":"text","text":") -> ("},{"kind":"typeIdentifier","text":"SwErlResponse","preciseIdentifier":"s:5SwErl0aB8Responsea"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"SwErlState","preciseIdentifier":"s:5SwErl0aB5Statea"},{"kind":"text","text":")) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Pid","preciseIdentifier":"s:5SwErl3PidV"}]},"doc://SwErl/documentation/SwErl/SwErlPassed":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlPassed","kind":"symbol","abstract":[{"type":"text","text":"This enum is used in the values of some SwErl functions."}],"navigatorTitle":[{"kind":"identifier","text":"SwErlPassed"}],"role":"symbol","url":"\/documentation\/swerl\/swerlpassed","title":"SwErlPassed","type":"topic","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwErlPassed"}]},"doc://SwErl/documentation/SwErl/spawnasysl(_:queueToUse:name:function:)":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/spawnasysl(_:queueToUse:name:function:)","kind":"symbol","abstract":[],"role":"symbol","url":"\/documentation\/swerl\/spawnasysl(_:queuetouse:name:function:)","title":"spawnasysl(_:queueToUse:name:function:)","type":"topic","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spawnasysl"},{"kind":"text","text":"("},{"preciseIdentifier":"s:5SwErl16RegistrationTypeO","kind":"typeIdentifier","text":"RegistrationType"},{"kind":"text","text":", "},{"kind":"externalParam","text":"queueToUse"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8Dispatch0A5QueueC","kind":"typeIdentifier","text":"DispatchQueue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5SwErl0aB7Messagea","kind":"typeIdentifier","text":"SwErlMessage"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"}]},"doc://SwErl/documentation/SwErl/spawnGlobally(queueToUse:name:function:)":{"kind":"symbol","title":"spawnGlobally(queueToUse:name:function:)","url":"\/documentation\/swerl\/spawnglobally(queuetouse:name:function:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spawnGlobally"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queueToUse"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8Dispatch0A5QueueC","kind":"typeIdentifier","text":"DispatchQueue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5SwErl0aB7Messagea","kind":"typeIdentifier","text":"SwErlMessage"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:s4Voida","kind":"typeIdentifier","text":"Void"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"}],"abstract":[],"type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/spawnGlobally(queueToUse:name:function:)","role":"symbol"},"doc://SwErl/documentation/SwErl/spawnasysf(queueToUse:name:initialState:function:)":{"kind":"symbol","type":"topic","url":"\/documentation\/swerl\/spawnasysf(queuetouse:name:initialstate:function:)","title":"spawnasysf(queueToUse:name:initialState:function:)","role":"symbol","abstract":[{"type":"text","text":"This function is used to link a unique name to a stateful function or closure that is executed asynchronously with no result being sent to the process sending the message. Any DispatchQueue desired for running the function or closure can be passed as the first parameter. The state can be any valid Swift type, a tuple, a list, a dictionary, optional, closure, etc."}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/spawnasysf(queueToUse:name:initialState:function:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spawnasysf"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queueToUse"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8Dispatch0A5QueueC","kind":"typeIdentifier","text":"DispatchQueue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"initialState"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier","text":"SwErlState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier","text":"SwErlState"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5SwErl0aB7Messagea","kind":"typeIdentifier","text":"SwErlMessage"},{"kind":"text","text":") -> "},{"preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier","text":"SwErlState"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"}]},"doc://SwErl/documentation/SwErl/GenStateM":{"kind":"symbol","type":"topic","url":"\/documentation\/swerl\/genstatem","title":"GenStateM","role":"symbol","abstract":[{"type":"text","text":"This enumeration has, as elements, a set of generic functions that conduct"},{"text":" ","type":"text"},{"text":"the communication required of all statem behaviors. These functions ensure","type":"text"},{"text":" ","type":"text"},{"text":"that the hook functions in each custom state machine are executed in the","type":"text"},{"text":" ","type":"text"},{"text":"correct order and store updated states correctly.","type":"text"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStateM","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenStateM"}],"navigatorTitle":[{"kind":"identifier","text":"GenStateM"}]},"doc://SwErl/documentation/SwErl/SwErlState":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlState","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"SwErlState","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swerl\/swerlstate","title":"SwErlState","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwErlState"}]},"doc://SwErl/documentation/SwErl/spawnGlobally(queueToUse:name:initialState:function:)":{"kind":"symbol","type":"topic","url":"\/documentation\/swerl\/spawnglobally(queuetouse:name:initialstate:function:)","title":"spawnGlobally(queueToUse:name:initialState:function:)","role":"symbol","abstract":[{"type":"text","text":"This function is used to link a unique name to a stateful function or closure that is executed synchronously. The function is then available to be called remotely from any SwErl compatable node. A result is sent back to the process sending the initial message. Any DispatchQueue desired for running the function or closure can be passed as the first parameter. The state can be any valid Swift type, a tuple, a list, a dictionary, optional, closure, etc."}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/spawnGlobally(queueToUse:name:initialState:function:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"spawnGlobally"},{"kind":"text","text":"("},{"kind":"externalParam","text":"queueToUse"},{"kind":"text","text":": "},{"preciseIdentifier":"s:8Dispatch0A5QueueC","kind":"typeIdentifier","text":"DispatchQueue"},{"kind":"text","text":", "},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"preciseIdentifier":"s:SS","kind":"typeIdentifier","text":"String"},{"kind":"text","text":", "},{"kind":"externalParam","text":"initialState"},{"kind":"text","text":": "},{"preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier","text":"SwErlState"},{"kind":"text","text":", "},{"kind":"externalParam","text":"function"},{"kind":"text","text":": ("},{"preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier","text":"SwErlState"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5SwErl0aB7Messagea","kind":"typeIdentifier","text":"SwErlMessage"},{"kind":"text","text":") -> ("},{"preciseIdentifier":"s:5SwErl0aB8Responsea","kind":"typeIdentifier","text":"SwErlResponse"},{"kind":"text","text":", "},{"preciseIdentifier":"s:5SwErl0aB5Statea","kind":"typeIdentifier","text":"SwErlState"},{"kind":"text","text":")) "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"preciseIdentifier":"s:5SwErl3PidV","kind":"typeIdentifier","text":"Pid"}]},"doc://SwErl/documentation/SwErl/GenServer":{"kind":"symbol","type":"topic","url":"\/documentation\/swerl\/genserver","title":"GenServer","role":"symbol","abstract":[{"type":"text","text":"Provides the API for creating, messaging, and managing "},{"code":"GenServer","type":"codeVoice"},{"text":" instances within the SwErl framework.","type":"text"},{"text":" ","type":"text"},{"text":"This static type facilitates the creation and interaction with ","type":"text"},{"code":"GenServer","type":"codeVoice"},{"text":" instances, encapsulating the functionality","type":"text"},{"text":" ","type":"text"},{"text":"for synchronous and asynchronous communication, process lifecycle management, and state handling.","type":"text"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServer","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"GenServer"}],"navigatorTitle":[{"kind":"identifier","text":"GenServer"}]},"doc://SwErl/documentation/SwErl/EventManager":{"kind":"symbol","type":"topic","url":"\/documentation\/swerl\/eventmanager","title":"EventManager","role":"symbol","abstract":[{"type":"text","text":"Enumeration containing a set of generic functions responsible for managing communication within _EventManager_s. These functions are designed to:"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/EventManager","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"EventManager"}],"navigatorTitle":[{"kind":"identifier","text":"EventManager"}]},"doc://SwErl/documentation/SwErl/Swift":{"kind":"symbol","type":"topic","url":"\/documentation\/swerl\/swift","title":"Swift","role":"collection","abstract":[],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Swift"},"doc://SwErl/documentation/SwErl/SafeDictCommand":{"abstract":[{"text":"Defines commands for interacting with a thread-safe dictionary.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SafeDictCommand","title":"SafeDictCommand","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/safedictcommand","navigatorTitle":[{"text":"SafeDictCommand","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SafeDictCommand","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/SwErlError":{"abstract":[],"url":"\/documentation\/swerl\/swerlerror","fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwErlError","kind":"identifier"}],"type":"topic","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlError","role":"symbol","kind":"symbol","navigatorTitle":[{"text":"SwErlError","kind":"identifier"}],"title":"SwErlError"},"doc://SwErl/documentation/SwErl/Contribute":{"abstract":[{"text":"for prospective contributors","type":"text"}],"role":"article","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Contribute","title":"Contribute","type":"topic","kind":"article","url":"\/documentation\/swerl\/contribute"},"doc://SwErl/documentation/SwErl/SwErlValue":{"abstract":[],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlValue","title":"SwErlValue","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/swerlvalue","navigatorTitle":[{"text":"SwErlValue","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwErlValue","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/Pid":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/Pid","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"Pid","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swerl\/pid","title":"Pid","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Pid"}]},"doc://SwErl/documentation/SwErl":{"type":"topic","abstract":[{"type":"text","text":"Concurrency - Erlang style"}],"identifier":"doc:\/\/SwErl\/documentation\/SwErl","url":"\/documentation\/swerl","title":"SwErl","role":"collection","kind":"symbol"},"doc://SwErl/documentation/SwErl/SwErlNewerRef":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlNewerRef","kind":"symbol","abstract":[{"text":"Structure representing an Erlang Newer Identifier for a process.","type":"text"}],"navigatorTitle":[{"text":"SwErlNewerRef","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swerl\/swerlnewerref","title":"SwErlNewerRef","type":"topic","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"text":"SwErlNewerRef","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/SwErlRef":{"abstract":[{"text":"Structure representing an Identifier of a process.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlRef","title":"SwErlRef","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/swerlref","navigatorTitle":[{"text":"SwErlRef","kind":"identifier"}],"fragments":[{"text":"struct","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwErlRef","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/SwErlClosure":{"abstract":[],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlClosure","title":"SwErlClosure","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/swerlclosure","navigatorTitle":[{"text":"SwErlClosure","kind":"identifier"}],"fragments":[{"text":"typealias","kind":"keyword"},{"text":" ","kind":"text"},{"text":"SwErlClosure","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/GettingStarted":{"abstract":[{"text":"The most important features of SwErl","type":"text"}],"role":"article","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GettingStarted","title":"GettingStarted","type":"topic","kind":"article","url":"\/documentation\/swerl\/gettingstarted"},"doc://SwErl/documentation/SwErl/RegistrationType":{"abstract":[{"text":"Enum representing different types of registration for SwErl processes.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/RegistrationType","title":"RegistrationType","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/registrationtype","navigatorTitle":[{"text":"RegistrationType","kind":"identifier"}],"fragments":[{"text":"enum","kind":"keyword"},{"text":" ","kind":"text"},{"text":"RegistrationType","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/SwErlProcess":{"kind":"symbol","type":"topic","url":"\/documentation\/swerl\/swerlprocess","title":"SwErlProcess","role":"symbol","abstract":[],"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlProcess","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwErlProcess"}],"navigatorTitle":[{"kind":"identifier","text":"SwErlProcess"}]},"doc://SwErl/documentation/SwErl/OTPActor_behavior":{"abstract":[{"text":"This behavior exists as a base protocol for all non-process SwErl actors. Since it is the base, all types of SwErl actors can be accumulated in shared data structures without resorting to using Swift’s ","type":"text"},{"type":"codeVoice","code":"Any"},{"text":" BIT (Built In Type).","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/OTPActor_behavior","title":"OTPActor_behavior","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/otpactor_behavior","navigatorTitle":[{"text":"OTPActor_behavior","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"OTPActor_behavior","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/buildSafe(dictionary:named:)":{"abstract":[{"text":"Constructs a thread-safe dictionary with specified initial state and processing logic.","type":"text"},{"text":" ","type":"text"},{"text":"The ","type":"text"},{"type":"codeVoice","code":"buildSafe"},{"text":" function initializes a safe dictionary by creating a new SwErl process","type":"text"},{"text":" ","type":"text"},{"text":"with specific behaviors for adding, removing, and retrieving values based on commands received.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/buildSafe(dictionary:named:)","title":"buildSafe(dictionary:named:)","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/buildsafe(dictionary:named:)","fragments":[{"text":"func","kind":"keyword"},{"text":" ","kind":"text"},{"text":"buildSafe","kind":"identifier"},{"text":"<","kind":"text"},{"text":"K","kind":"genericParameter"},{"text":", ","kind":"text"},{"text":"V","kind":"genericParameter"},{"text":">(","kind":"text"},{"text":"dictionary","kind":"externalParam"},{"text":": [","kind":"text"},{"text":"K","kind":"typeIdentifier"},{"text":" : ","kind":"text"},{"text":"V","kind":"typeIdentifier"},{"text":"], ","kind":"text"},{"text":"named","kind":"externalParam"},{"text":": ","kind":"text"},{"preciseIdentifier":"s:SS","text":"String","kind":"typeIdentifier"},{"text":") ","kind":"text"},{"text":"throws","kind":"keyword"}]},"doc://SwErl/documentation/SwErl/GenServerBehavior":{"abstract":[{"text":"Defines the behavior for a generic server (","type":"text"},{"type":"codeVoice","code":"GenServer"},{"text":") in the SwErl framework.","type":"text"},{"text":" ","type":"text"},{"type":"codeVoice","code":"GenServerBehavior"},{"text":" protocol allows for the creation of stateful SwErl processes that support synchronous calls and replies through a separate API.","type":"text"},{"text":" ","type":"text"},{"text":"This protocol is designed for user-defined processes, enabling the encapsulation of process state within the registry.","type":"text"},{"text":" ","type":"text"},{"text":"Types conforming to this protocol are utilized to define the functionality of user-created ","type":"text"},{"type":"codeVoice","code":"GenServer"},{"text":" instances.","type":"text"},{"text":" ","type":"text"},{"text":"Multiple, separate ","type":"text"},{"type":"codeVoice","code":"GenServer"},{"text":" instances can be initiated from a single conforming type. Each instance operates within its own execution context as a separate process.","type":"text"},{"text":" ","type":"text"},{"text":"Conforming types are recommended to be static, leveraging SwErl infrastructure for state management.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenServerBehavior","title":"GenServerBehavior","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/genserverbehavior","navigatorTitle":[{"text":"GenServerBehavior","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenServerBehavior","kind":"identifier"}]},"doc://SwErl/documentation/SwErl/SwErlMessage":{"identifier":"doc:\/\/SwErl\/documentation\/SwErl\/SwErlMessage","kind":"symbol","abstract":[],"navigatorTitle":[{"text":"SwErlMessage","kind":"identifier"}],"role":"symbol","url":"\/documentation\/swerl\/swerlmessage","title":"SwErlMessage","type":"topic","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"SwErlMessage"}]},"doc://SwErl/documentation/SwErl/GenStatemBehavior":{"abstract":[{"text":"This protocol enforces the types of behaviors required of every state machine in SwErl. It extends the OTPActor behavior like all non-process SwErl actors.","type":"text"}],"role":"symbol","identifier":"doc:\/\/SwErl\/documentation\/SwErl\/GenStatemBehavior","title":"GenStatemBehavior","type":"topic","kind":"symbol","url":"\/documentation\/swerl\/genstatembehavior","navigatorTitle":[{"text":"GenStatemBehavior","kind":"identifier"}],"fragments":[{"text":"protocol","kind":"keyword"},{"text":" ","kind":"text"},{"text":"GenStatemBehavior","kind":"identifier"}]}}}